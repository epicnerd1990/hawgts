$Tasker > KWGT Status$


$DEVICE STATUS HIGHLIGHT$

WORKING TESTS
$tc(json, gv(jsondb), ".device_states[?(@.entity_id == 'light.bedroom_lights')].state")$

.device_states[?(@.entity_id == 'light.bedroom_lights')].state 

----

GLOBAL FORMULAS FOR RETURNING DATA TO UI FORMULA
V4 WORKING
  formulas/devicestate
  $if(
    tc(reg, gv(jsondb), #glbname, #glbname) != "",
      tc(json, gv(jsondb), ".device_states[?(@.entity_id == '" + #glbname + "')].state")
  )$

  formulas/lightlevel
  $if(
    tc(reg, gv(jsondb), #glbname, #glbname) != "",
      tc(json, gv(jsondb), ".device_states[?(@.entity_id == '" + #glbname + "')].brightness")
  )$

  formulas/lightcolor
  $if(
    tc(reg, gv(jsondb), #glbname, #glbname) != "",
      tc(json, gv(jsondb), ".device_states[?(@.entity_id == '" + #glbname + "')].color")
  )$


V2-3
  formulas/devicestate
  $if(
    tc(reg, gv(tasker/statedat), #glbname, #glbname) != "",
      sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $2}'")
  )$

  formulas/lightlevel
  $if(
    tc(reg, gv(tasker/statedat), #glbname, #glbname) != "", 
      sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $3}' | grep -E '^[0-9]+$' || echo 0")
  )$

  formulas/lightcolor
  $if(
    tc(reg, gv(tasker/statedat), #glbname, #glbname) != "", 
      sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $4}' | grep -E '^[0-9]{1,3},[0-9]{1,3},[0-9]{1,3}'")
  )$

OLD
V3
LOW
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel), (if(gv(formulas/lightlevel) >= 1, (if(gv(formulas/lightlevel) <= 75, (if(gv(formulas/devicestate) = on, gv(colors/colico), #00FFFFFF)), #00FFFFFF)), #00FFFFFF)), #00FFFFFF)$

V2
LOW
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel) >= 1 & gv(formulas/lightlevel) <= 75, gv(generate/colico), gv(formulas/lightlevel) = "", #00FFFFFF, #00FFFFFF)$

----------------------------------------

WORKING UI CODE FOR STATUS ICONS (V3)

OFF (CIRCLE COLOR)
CURRENT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/devicestate) = off, gv(generate/colico), #00FFFFFF)$
EDIT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/devicestate) = off, gv(generate/colico), #00FFFFFF)$

LOW (CIRCLE COLOR)
CURRENT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel) >= 1 & gv(formulas/lightlevel) <= 75, gv(generate/colico), gv(formulas/lightlevel) = "", #00FFFFFF, #00FFFFFF)$
$if(gv(formulas/lightlevel) >= 1 & gv(formulas/lightlevel) <= 75, gv(generate/colico), #00FFFFFF)$
EDIT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel), (if(gv(formulas/lightlevel) >= 1, (if(gv(formulas/lightlevel) <= 75, (if(gv(formulas/devicestate) = on, gv(colors/colico), #00FFFFFF)), #00FFFFFF)), #00FFFFFF)), #00FFFFFF)$

$lv(glbname, \"light.bedroom_lights\")$
$if(gv(formulas/lightlevel) >= 1 & gv(formulas/lightlevel) <= 75, gv(generate/colico), gv(formulas/lightlevel) = \"\", #00FFFFFF, #00FFFFFF)$
$if(gv(formulas/lightlevel) >= 1 & gv(formulas/lightlevel) <= 75, gv(generate/colico), gv(formulas/lightlevel) = "", #00FFFFFF, #00FFFFFF)$

MED (CIRCLE COLOR)
CURRENT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel) >= 76 & gv(formulas/lightlevel) <= 200, gv(generate/colico), #00FFFFFF)$
EDIT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel), (if(gv(formulas/lightlevel) >= 76, (if(gv(formulas/lightlevel) <= 200, (if(gv(formulas/devicestate) = on, gv(colors/colico), #00FFFFFF)), #00FFFFFF)), #00FFFFFF)), #00FFFFFF)$


HIGH (CIRCLE COLOR)
CURRENT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel) >= 201, gv(generate/colico), #00FFFFFF)$
EDIT
$lv(glbname, "light.bedroom_lights")$
$if(gv(formulas/lightlevel), (if(gv(formulas/lightlevel) >= 201, (if(gv(formulas/devicestate) = on, gv(colors/colico), #00FFFFFF)), #00FFFFFF)), #00FFFFFF)$

ROOM SELECT (CIRCLE COLOR)
NEW
$if(gv(generate/pagenum) = 1, gv(generate/colico), #00FFFFFF)$
ICON COLOR
$if(gv(generate/pagenum) = 3, gv(generate/color1), gv(colors/colico))$
FILTER
$if(gv(generate/pagenum) = 3, "MULTIPLY", "NORMAL")$

----------------------------------------

FINAL SHELL TESTING
$if(tc(reg, gv(tasker/statedat), #glbname, #glbname) != "", 
sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $3}' | grep -E '^[0-9]+$' || echo 0"))$

$lv(glbname, \"light.bedroom_lights\")$
$if(gv(formulas/lightlevel) = off, gv(generate/colico), #00FFFFFF)$"

SHELL TESTING
$sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $3}'")$
$sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {if ($3 ~ /^[0-9]+$/) print $3; else print "0"}'")$
--$sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $3}' | grep -E '^[0-9]+$' || echo 0")$
$sh("echo '" + gv(tasker/statedat) + "' | grep '^" + #glbname + ";;' | awk -F';;' '{print $3}' | grep -E '^[0-9]+$' || echo 0")$

$sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $4}' | grep -E '^([0-9]{1,3}, ){2}[0-9]{1,3}$'")$
--$sh("echo '" + gv(tasker/statedat) + "' | tr ';;' '\n' | awk -F':' '/^" + #glbname + ":/ {print $4}' | grep -E '^[0-9]{1,3},[0-9]{1,3},[0-9]{1,3}'")$

GLOBALS WORKING SHELL 
State
        "value": "$if(tc(reg, gv(tasker/statedat), #glbname) != \"\", sh(\"echo '\" + gv(tasker/statedat) + \"' | tr ';;' '\\n' | awk -F':' '/^\" + #glbname + \":/ {print $2}'\"))$"
Level
        "value": "$if(tc(reg, gv(tasker/statedat), #glbname) != \"\", sh(\"echo '\" + gv(tasker/statedat) + \"' | tr ';;' '\\n' | awk -F':' '/^\" + #glbname + \":/ {print $3}' | grep -E '^[0-9]+$' || echo 0\"))$"
color
        "value": "$if(tc(reg, gv(tasker/statedat), #glbname) != \"\", sh(\"echo '\" + gv(tasker/statedat) + \"' | tr ';;' '\\n' | awk -F':' '/^\" + #glbname + \":/ {print $4}' | grep -E '^[0-9]{1,3},[0-9]{1,3},[0-9]{1,3}'\"))$"

----------------------------------------

FIRST STATUS DISPLAY CODE
$lv(glbname, "light.bedroom_lights")$
$lv(status, tc(reg, gv(haentnam), #glbname + " (\S+)", "$1"))$
$lv(level, tc(reg, gv(haentnam), #glbname + " \S+ (\S+)", "$1"))$
$if(#status = "on" & (#level >= 1 & #level <= 75), "ALWAYS", "NEVER")$  // Low icon
$if(#status = "on" & (#level > 75 & #level <= 200), "ALWAYS", "NEVER")$  // Med icon
$if(#status = "on" & (#level > 200 | tc(len, #level) = 0), "ALWAYS", "NEVER")$  // High icon
$if(#status = "off", "ALWAYS", "NEVER")$  // Off icon

----------------------------------------------------------------------------------------------------

$Battery Levels$

$lv(glbname, "sensor.arch_battery")$$gv(formulas/lgtstate)$
Charging color
$lv(glbname, "sensor.arch_battery")$$if(gv(formulas/lgtstate) = 100, #FFFFFFFF,#FF008F95)$
Charging Filter
$lv(glbname, "sensor.arch_battery")$$if(gv(formulas/lgtstate) = 100, NORMAL, MULTIPLY)$
Charging visibility
$lv(glbname, "binary_sensor.arch_battery_is_charging")$$if(gv(formulas/lgtstate) = true, ALWAYS, NEVER)$
$lv(glbname, "sensor.watch_battery_state")$$if(gv(formulas/lgtstate) = charging, ALWAYS, gv(formulas/lgtstate) = full, ALWAYS, NEVER)$
White Color:
$ce(gv(colors/colico), alpha, 100)$