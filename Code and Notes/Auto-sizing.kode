ADD CUSTOM BOX 1 SIZE TO WIDGET

// box1dir1
DATA##\"Customize Box 1.\n\nSelect how many columns to display in Box 1, or \"Custom\" to enter the percentage of the widget that Box 1 fills (entered in the next list item).\"
0##Remove (Single Box Mode),
1##1 Column (Auto-Center),
2##2 Column (Auto-Center),
3##Custom Size (Below)


AUTO-ALIGN BASED ON RESIZE
> Flow
$lv(current, gv(box1position))$
$lv(horver, (if(gv(widgetorient) = 0, "hor", "ver")))$
$lv(inverted, (if(gv(boxorder) = 0, "no", "yes")))$
$lv(pos, (if(#horver = "hor" & #inverted = "no", "RIGHT", #horver = "hor" & #inverted = "yes", "LEFT", #horver = "ver" & #inverted = "no", "TOP", #horver = "ver" & #inverted = "yes", "BOTTOM")))$
$if(gv(autoalign) = 1, #pos, #current)$
$lv(current, gv(box1position))$
$lv(horver, (if(gv(widgetorient) = 0, "hor", "ver")))$
$lv(inverted, (if(gv(boxorder) = 0, "no", "yes")))$
$lv(pos, (if(#horver = "hor" & #inverted = "no", "RIGHT", #horver = "hor" & #inverted = "yes", "LEFT", #horver = "ver" & #inverted = "no", "TOP", #horver = "ver" & #inverted = "yes", "BOTTOM")))$
$if(gv(autoalign) = 1, #pos, current)$

----------------------------------------

generated/widgetwidth
$si(rwidth) - (gv(horizontaldevicopd) * 2)$

generated/widgetheight
$si(rheight) - (gv(verticaldevicopd) * 2)$

----------------------------------------

generated/WIDGETRATIO

> Flow**
$if(gv(generated/widgetratio) != si(rratio), si(rratio))$
$

$

----------------------------------------

generated/BOX1WIDTH
V4 - Auto-align 1+2 column options, add flow to sync to custom

> Flow**
Write to iconpaddingbox. trigger: box1dir1, si(ratio), iconsize, icondevicopdstack
$gv(formulas/boxsize)$
$lv(align, gv(widgetorient))$
$lv(row, gv(box1dir2))$
$lv(wgtdir, if(#align = 0, gv(generated/widgetheight), gv(generated/widgetwidth)))$
$lv(pad, (#wgtdir - (if(#row = 1, gv(iconsize), #row = 2, ((gv(iconsize) * 2) + gv(iconpaddingstack))))))$
$lv(size, (if(gv(box1dir1) = 1 | gv(box1dir1) = 2, (#pad / 2))))$
$lv(out, if(#size >= 1 & #size <= 40, #size))$$#out$


> Flow**
Write to box1dir1percent. trigger: box1dir1 
$gv(formulas/boxsize)$$lv(tempsize, gv(box1dir1percent))$$lv(size, (if(gv(box1dir1) = 0, 0,gv(box1dir1) = 1, ((#pad + gv(iconsize)) * 100 / 720),gv(box1dir1) = 2, ((#pad + (gv(iconsize) * 2) + gv(iconpaddinginstack)) * 100 / 720),#tempsize)))$$lv(out, (if(#align = 1, gv(generated/widgetwidth), #size >= 0, #size, 0)))$$#out$

> Global
generated/box1width & generated/box1height (copy below)
$gv(formulas/boxsize)$
$lv(size, (if(
    gv(box1dir1) = 0, 0,
    gv(box1dir1) = 1, (#pad + gv(iconsize)),
    gv(box1dir1) = 2, (#pad + (gv(iconsize) * 2) + gv(iconpaddinginstack)),
    gv(box1dir1) = 3, (gv(box1dir1percent) * 720 / 100)
)))$
$lv(out, (if(#align = 1, gv(generated/widgetwidth), #size >= 0, #size)))$$#out$

> Global
formulas/boxsize
$lv(align, gv(widgetorient))$
$lv(row, gv(box1dir2))$
$lv(wgtdir, if(#align = 0, gv(generated/widgetheight), gv(generated/widgetwidth)))$
$lv(pad, (#wgtdir - (if(#row = 1, gv(iconsize), #row = 2, ((gv(iconsize) * 2) + gv(iconpaddingstack))))))$

EDITING
$lv(align, gv(widgetorient))$
$lv(wgtdir, if(#align = 0, si(rheight), si(rwidth)))$
$lv(wgtpad, if(#align = 0, gv(verticaldevicopd), gv(horizontaldevicopd)))$
$lv(two, ((gv(iconsize) * 2) + gv(iconpaddinginstack) + (gv(iconpaddinginstack) * 2)))$
$if(#align = 1, gv(generated/widgetwidth), (#size * 720 / 100))$


V3
$lv(size, (if(gv(box1dir1) = CUSTOM, gv(box1dir1percent), gv(box1dir1))))$
$if(gv(widgetorient) = 1, gv(generated/widgetwidth), (#size * 720 / 100))$

V2
$if(gv(wgtalign) = 0,
if(gv(smboxper) = 0, gv(smboxcus),
gv(smboxper) = 15, (gv(iconsize) + (gv(iconpaddinginstack) * 2)),
gv(smboxper) = 30, ((gv(iconsize) * 2) + gv(iconpaddinginstack) + (gv(iconpaddinginstack) * 2)),
((gv(iconsize) * 2) + gv(iconpaddinginstack) + (gv(iconpaddinginstack) * 2))),
gv(generated/wgwidth))$

V1
$if(gv(wgtalign) = 0, (gv(smboxper) * 720 / 100), (gv(generated/wgwidth)))$

----------------------------------------

generated/BOX1HEIGHT
V4
> Global
$gv(formulas/boxsize)$
$lv(size, (if(
    gv(box1dir1) = 0, 0,
    gv(box1dir1) = 1, (#pad + gv(iconsize)),
    gv(box1dir1) = 2, (#pad + (gv(iconsize) * 2) + gv(iconpaddinginstack)),
    gv(box1dir1) = 3, (gv(box1dir1percent) * 720 / 100)
)))$
$lv(out, (if(#align = 0, gv(generated/widgetheight), #size >= 1, #size)))$$#out$

> Global
formulas/boxsize
$lv(align, gv(widgetorient))$
$lv(wgtdir, if(#align = 0, gv(generated/widgetheight), gv(generated/widgetwidth)))$
$lv(pad, (#wgtdir - ((gv(iconsize) * 2) + gv(icondevicopdstack))))$

V3
$lv(size, (if(gv(box1dir1) = CUSTOM, gv(box1dir1percent), gv(box1dir1))))$
$if(gv(widgetorient) = 0, gv(generated/widgetheight), (#size * 720 / 100))$

V2
$if(gv(wgtalign) = 1, if(gv(smboxper) = 0, gv(smboxcus), (gv(smboxper) * 720 / 100)), gv(generated/wgheight))$

V1:
$if(gv(wgtalign) = 0, gv(generated/wgheight), (gv(smboxper) * 720 / 100))$

----------------------------------------

box2width
$if(gv(widgetorient) = 1 | gv(box1dir1) >= 1,gv(generated/widgetwidth),(if(gv(generated/widgetwidth) <= gv(generated/box2minsize),gv(generated/box2minsize),(gv(generated/widgetwidth) - gv(generated/box1width)))))$
V2
$if(gv(widgetorient) = 0, 
    (if(gv(generated/widgetwidth) <= gv(generated/box2minsize), 
        gv(generated/box2minsize),
        (gv(generated/widgetwidth) - gv(generated/box1width)))
    ), 
gv(generated/widgetwidth)
)$

V1
$if(gv(widgetorient) = 0 | gv(box1dir1) = 0,(if(gv(generated/widgetwidth) <= gv(generated/box2minsize),gv(generated/box2minsize), (gv(generated/widgetwidth) - gv(generated/box1width)))),gv(generated/widgetwidth))$

box2height
$if(gv(wgtalign) = 0, gv(generated/wgheight), (gv(generated/wgheight) - gv(generated/smboxh)))$

----------------------------------------

box2minsize
V2.5
$lv(devicosi, (if(gv(devicosize) = gv(deviceiconsize), gv(deviceiconsize), gv(appiconsize))))$
$lv(devicopd, (if(gv(deviceiconstyle) != 3, #devicosi, 0)))$
$((gv(iconsize) * 2) + (gv(iconpaddinginstack) * 2) + #devicopd + gv(iconpaddingbox))$

V2
$lv(devicosi, (if(gv(icodevge) = gv(icodev), gv(icodev), gv(icosm))))$
$lv(devicopd, (if(icopadr = 0, #devicosi, 0)))$
$((gv(iconsize) * 2) + gv(iconpaddinginstack) + gv(iconpaddinginstack) + #devicopd)$

$/* If devicopd is hidden, remove from calculation */$
$lv(devicosi, (if(gv(icodevge) = gv(icodev), gv(icodev), gv(icosm))))$
$lv(devicopd, (if(icopadr = 0, #devicosi, 0)))$
$/*Calculate the minimum size Box 2 can be */$
$((gv(iconsize) * 2) + gv(iconpaddinginstack) + gv(iconpaddinginstack) + #devicopd)$

V1
$/* If devicopd is hidden, remove from calculation */lv(icoopt, if(gv(icopadr) = 0,  (gv(icodevge)), 0))$
$/*Calculate the minimum size Box 2 can be (2 icons) */((gv(iconsize) * 2) + (gv(iconpaddinginstack) * 2) + gv(iconpaddinginstack) + #icoopt)$

----------------------------------------

iconcount
V3
$lv(icon, gv(iconsize) + gv(iconpaddinginstack))$
$lv(devicosi, if(gv(deviceiconstyle) = 1, gv(appiconsize), gv(deviceiconstyle) = 3, 0, gv(deviceiconsize)))$
$lv(boxsize1, if(gv(widgetorient) = 0, gv(generated/box2width), gv(generated/box2height)))$
$lv(boxsize2, (#boxsize1 - #devicosi) / #icon)$
$if(#boxsize2 <= 2, 2, (tc(cut, mu(abs,#boxsize2), 1)))$

V2
$lv(icon, gv(iconsize) + gv(iconpaddinginstack))$
$lv(devicosi, if(gv(icodevge) gv(icodev), gv(icodev), gv(icosm)))$
$lv(devicopd, if(icopadr = 0, #devicosi), 0)$
$lv(boxsize1, if(gv(wgtalign) = 0, gv(generated/lgboxw), gv(generated/lgboxh)))$
$lv(boxsize2, #boxsize1 - #devicopd)$
$lv(count, #boxsize2 / #icon)$
$if(#count <= 2, 2, tc(cut, mu(abs,#count), 1))$

$/* generated number of icons able to be shown in Box 2
Calculate icon sizes, devicopd and widget alignment */$
$lv(icon, gv(iconsize) + gv(iconpaddinginstack))$
$lv(devicosi, if(gv(icodevge) = gv(icodev), gv(icodev), gv(icosm)))$
$lv(devicopd, if(icopadr = 0, #devicosi), 0)$
$lv(boxsize1, if(gv(wgtalign) = 0, gv(generated/lgboxw), gv(generated/lgboxh)))$

$/* Subtract settings icons, unless they're hidden.
Get final number: Icon size / Box - settings */$
$lv(boxsize2, #boxsize1 - #devicopd)$
$lv(count, #boxsize2 / #icon)$
$/* mu(abs) removes decimal point. This causes the count to round up and formats it for use.*/$
$if(#count <= 2, 2, tc(cut, mu(abs,#count), 1))$

V1
$/* generated number of icons able to be shown
Calculate icon sizes, devicopd and widget alignment */
lv(icon, gv(iconsize) + gv(iconpaddinginstack))$$lv(lgbox, if(gv(wgtalign) = 0, gv(generated/lgboxw), gv(generated/lgboxh)))$

$/* Subtract settings icons, unless they're gone.
Get final number: Icon size / Box - settings */
lv(adjustment, if(gv(icopadr) = 0, gv(icosm), 0))$
$lv(boxsize, #lgbox - #adjustment)$
$lv(count, #boxsize / #icon)$
$if(#count <= 2, 2, tc(cut, mu(abs,#count), 1))$

----------------------------------------

generated/devicosize
V2
$lv(autoshr, (if(gv(generated/iconcount) < 4 & gv(deviceiconstyle) = 2, 1, 0)))$
$if(#autoshr = 1 | gv(deviceiconstyle) = 1 | gv(box1dir2) = 1, (gv(iconpaddinginstack) + gv(appiconsize)), #autoshr = 0 | gv(deviceiconstyle) = 0, gv(deviceiconsize))$

V1
$lv(small, gv(iconpaddinginstack) + gv(icosm))$
$lv(large, gv(icodev))$
$lv(autoshr, (if(gv(generated/icocount) < 4 & gv(icodevsm) = 2, 1, 0)))$
$lv(1row, (if(si(rheight) <= 150, 1, 0)))$
$if(#autoshr = 1 | gv(icodevsm) = 1 | #1row = 1, #small, #autoshr = 0 | gv(icodevsm) = 0, #large)$


----------------------------------------

ROW AND COLUMN PADDING
- Only Light template setup

> Box 1 Between Columns (horizontal-base)
iconpaddinginstack

> Box 1 Between Rows (horizontal-base)
iconpaddingstack

> Box 2 Between Rows
iconpaddingstack

> Box 2 Between Icons
iconpaddinginstack

> Box 2 Boxes edge to icons
iconpaddingbox

SKIPPED:
B12R3D - Custom Template
B12R3D - Lighting Template
