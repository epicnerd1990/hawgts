All Autosizing adjustments, mostly Box 1


>> AUTO-ALIGN Box 1 Position
V2 - Optimize Code
$lv(align, gv(widgetorient))$
$lv(invert, gv(boxorder))$
$lv(pos, (if(#align = 0 & #invert = 0, "RIGHT", 
             #align = 0 & #invert = 1, "LEFT", 
             #align = 1 & #invert = 0, "TOP", 
             #align = 1 & #invert = 1, "BOTTOM"
)))$
$if(gv(autoalign) = 1, #pos, gv(box1position))$

V1
$lv(current, gv(box1position))$
$lv(horver, (if(gv(widgetorient) = 0, "hor", "ver")))$
$lv(inverted, (if(gv(boxorder) = 0, "no", "yes")))$
$lv(pos, (if(#horver = "hor" & #inverted = "no", "RIGHT", #horver = "hor" & #inverted = "yes", "LEFT", #horver = "ver" & #inverted = "no", "TOP", #horver = "ver" & #inverted = "yes", "BOTTOM")))$
$if(gv(autoalign) = 1, #pos, current)$

----------------------------------------

// generated/widgetwidth
$si(rwidth) - (gv(horizontaldevicopd) * 2)$

// generated/widgetheight
$si(rheight) - (gv(verticaldevicopd) * 2)$

----------------------------------------

// generated/WIDGETRATIO

> Flow**
$if(gv(generated/widgetratio) != si(rratio), si(rratio))$
$

$

----------------------------------------

BOX 1 WIDTH
V4 - ADD GLOBAL VARIABLE AND COMPLETLY REVAMP

>> Icon Padding
Write to iconpaddingbox. Trigger: box1dir1, si(ratio), iconsize, icondevicopdstack
$lv(align, gv(widgetorient))$
$lv(row, gv(box1dir2))$
$lv(wgtdir, if(#align = 0, gv(generated/widgetheight), gv(generated/widgetwidth)))$
$lv(pad, (#wgtdir - (if(#row = 1, gv(iconsize), #row = 2, ((gv(iconsize) * 2) + gv(iconpaddingstack))))))$
$gv(formulas/boxsize)$
$lv(size, (if(gv(box1dir1) = 1 | gv(box1dir1) = 2 | gv(box1dir1) = DATA, (#pad / 2), 0)))$
$lv(out, if(#size >= 1 & #size <= 40, #size, 0))$$#out$

>> Box 1 Size
Write to box1dir1percent. Trigger: box1dir1 
$gv(formulas/boxsize)$
$lv(tempsize, gv(box1dir1percent))$
$lv(size, (if(
    gv(box1dir1) = 0, 0,
    gv(box1dir1) = 1, ((#pad + gv(iconsize)) * 100 / 720),
    gv(box1dir1) = 2 | gv(box1dir1) = DATA, ((#pad + (gv(iconsize) * 2) + gv(iconpaddinginstack)) * 100 / 720),
    #tempsize
)))$
$if(#align = 1, gv(generated/widgetwidth), #size >= 0, tc(split, #size, ".", 1), 0)$

// generated/BOX1WIDTH
V4 - Auto-align 1+2 column options, add flow to sync to custom
generated/box1width & generated/box1height (copy below)
$gv(formulas/boxsize)$
$lv(size, (if(
    gv(box1dir1) = 0, 0,
    gv(box1dir1) = 1, (#pad + gv(iconsize)),
    gv(box1dir1) = 2 | gv(box1dir1) = DATA, (#pad + (gv(iconsize) * 2) + gv(iconpaddinginstack)),
    gv(box1dir1) = 3, (gv(box1dir1percent) * 720 / 100)
)))$
$if(#align = 1, gv(generated/widgetwidth), #size >= 0, #size)$

EDITING
$lv(align, gv(widgetorient))$
$lv(wgtdir, if(#align = 0, si(rheight), si(rwidth)))$
$lv(wgtpad, if(#align = 0, gv(verticaldevicopd), gv(horizontaldevicopd)))$
$lv(two, ((gv(iconsize) * 2) + gv(iconpaddinginstack) + (gv(iconpaddinginstack) * 2)))$
$if(#align = 1, gv(generated/widgetwidth), (#size * 720 / 100))$


V3
$lv(size, (if(gv(box1dir1) = CUSTOM, gv(box1dir1percent), gv(box1dir1))))$
$if(gv(widgetorient) = 1, gv(generated/widgetwidth), (#size * 720 / 100))$

V2
$if(gv(wgtalign) = 0,
if(gv(smboxper) = 0, gv(smboxcus),
gv(smboxper) = 15, (gv(iconsize) + (gv(iconpaddinginstack) * 2)),
gv(smboxper) = 30, ((gv(iconsize) * 2) + gv(iconpaddinginstack) + (gv(iconpaddinginstack) * 2)),
((gv(iconsize) * 2) + gv(iconpaddinginstack) + (gv(iconpaddinginstack) * 2))),
gv(generated/wgwidth))$

V1
$if(gv(wgtalign) = 0, (gv(smboxper) * 720 / 100), (gv(generated/wgwidth)))$

----------------------------------------

FORMULA USED IN BOX1WIDTH AND BOX1HEIGHT
// formulas/boxsize
$lv(align, gv(widgetorient))$
$lv(row, gv(box1dir2))$
$lv(wgtdir, if(#align = 0, gv(generated/widgetheight), gv(generated/widgetwidth)))$
$lv(pad, (#wgtdir - (if(#row = 1, gv(iconsize), #row = 2, ((gv(iconsize) * 2) + gv(iconpaddingstack))))))$

----------------------------------------

// generated/BOX1HEIGHT
V4
> Global
$gv(formulas/boxsize)$
$lv(size, (if(
    gv(box1dir1) = 0, 0,
    gv(box1dir1) = 1, (#pad + gv(iconsize)),
    gv(box1dir1) = 2 | gv(box1dir1) = DATA, (#pad + (gv(iconsize) * 2) + gv(iconpaddinginstack)),
    gv(box1dir1) = 3, (gv(box1dir1percent) * 720 / 100)
)))$
$if(#align = 0, gv(generated/widgetheight), #size >= 1, #size)$

> Global
formulas/boxsize
$lv(align, gv(widgetorient))$
$lv(wgtdir, if(#align = 0, gv(generated/widgetheight), gv(generated/widgetwidth)))$
$lv(pad, (#wgtdir - ((gv(iconsize) * 2) + gv(icondevicopdstack))))$

V3
$lv(size, (if(gv(box1dir1) = CUSTOM, gv(box1dir1percent), gv(box1dir1))))$
$if(gv(widgetorient) = 0, gv(generated/widgetheight), (#size * 720 / 100))$

V2
$if(gv(wgtalign) = 1, if(gv(smboxper) = 0, gv(smboxcus), (gv(smboxper) * 720 / 100)), gv(generated/wgheight))$

V1:
$if(gv(wgtalign) = 0, gv(generated/wgheight), (gv(smboxper) * 720 / 100))$

----------------------------------------

// box2width

V3
$if(gv(widgetorient) = 1 | gv(box1dir1) = 0,
    gv(generated/widgetwidth),(
        if(gv(generated/widgetwidth) <= gv(generated/box2minsize),
        gv(generated/box2minsize),
    (gv(generated/widgetwidth) - gv(generated/box1width))
)))$

V2
$if(gv(widgetorient) = 0, 
    (if(gv(generated/widgetwidth) <= gv(generated/box2minsize), 
        gv(generated/box2minsize),
        (gv(generated/widgetwidth) - gv(generated/box1width)))
    ), 
gv(generated/widgetwidth)
)$

V1
$if(gv(widgetorient) = 0 | gv(box1dir1) = 0,(if(gv(generated/widgetwidth) <= gv(generated/box2minsize),gv(generated/box2minsize), (gv(generated/widgetwidth) - gv(generated/box1width)))),gv(generated/widgetwidth))$

box2height
$if(gv(wgtalign) = 0, gv(generated/wgheight), (gv(generated/wgheight) - gv(generated/smboxh)))$

----------------------------------------

// box2minsize
V3 - Add device icon positioning code

NEW DATA WITH DEVICE ICON REVAMP
- Fix to avoid global loop from using devicosize
- Make devicocu a global formula and use for both iconcount and box2minsize
Ignore device icon altogether (0) if:
deviceappiconpadding = 1
deviceiconposition = 4

Use small settings icon only if:
deviceiconposition = 2
deviceiconshrink = 1

Otherwise, use devicosize


V2.5 - Refresh code
$lv(devicosi, (if(gv(devicosize) = gv(deviceiconsize), gv(deviceiconsize), gv(appiconsize))))$
$lv(devicopd, (if(gv(deviceappiconpadding) = 1, #devicosi, 0)))$
$((gv(iconsize) * 2) + (gv(iconpaddinginstack) * 2) + #devicopd + gv(iconpaddingbox))$

V2
$lv(devicosi, (if(gv(icodevge) = gv(icodev), gv(icodev), gv(icosm))))$
$lv(devicopd, (if(icopadr = 0, #devicosi, 0)))$
$((gv(iconsize) * 2) + gv(iconpaddinginstack) + gv(iconpaddinginstack) + #devicopd)$

$/* If devicopd is hidden, remove from calculation */$
$lv(devicosi, (if(gv(icodevge) = gv(icodev), gv(icodev), gv(icosm))))$
$lv(devicopd, (if(icopadr = 0, #devicosi, 0)))$
$/*Calculate the minimum size Box 2 can be */$
$((gv(iconsize) * 2) + gv(iconpaddinginstack) + gv(iconpaddinginstack) + #devicopd)$

V1
$/* If devicopd is hidden, remove from calculation */lv(icoopt, if(gv(icopadr) = 0,  (gv(icodevge)), 0))$
$/*Calculate the minimum size Box 2 can be (2 icons) */((gv(iconsize) * 2) + (gv(iconpaddinginstack) * 2) + gv(iconpaddinginstack) + #icoopt)$

----------------------------------------


V4 - Clean code up
$lv(autoshr, (if(gv(generated/iconcount) < 4 & gv(deviceiconshrink) = 2, 1, 0)))$
$if(#autoshr = 1 | gv(deviceiconshrink) = 1 | gv(box1dir2) = 1, (
  gv(iconpaddinginstack) + gv(appiconsize)), 
  #autoshr = 0 | gv(deviceiconshrink) = 0, gv(deviceiconsize))$

V3
$lv(small, gv(iconpaddinginstack) + gv(icosm))$
$lv(large, gv(icodev))$
$lv(autoshr, (if(gv(generated/icocount) < 4 & gv(icodevsm) = 2, 1, 0)))$
$lv(1row, (if(si(rheight) <= 150, 1, 0)))$
$if(#autoshr = 1 | gv(icodevsm) = 1 | #1row = 1, #small, #autoshr = 0 | gv(icodevsm) = 0, #large)$

V2 - ADD GLOBAL SETTINGS
$lv(small, gv(iconpaddinginstack) + gv(icosm))$
$lv(large, gv(icodev))$
$lv(autosize, (if(gv(generated/icocount) < 4 & gv(icodevsm) = 2, 1, 0)))$
$if(#autosize = 1 | gv(icodevsm) = 1, #small, #autosize = 0 | gv(icodevsm) = 0, #large)$
> to Device Icon

V1 - BASIC RESIZE
$lv(small, gv(iconpaddinginstack + gv(icosm))$
$lv(auto, (if((gv(generated/icocount) < 4 | gv(icodevsm) > 0), #small)))$
$if(gv(icodevsm) = 0, gv(icodev), #auto)$

----------------------------------------


V3 - Clean up code
$lv(icon, gv(iconsize) + gv(iconpaddinginstack))$
$lv(devicosi, if(gv(deviceiconshrink) = 1, gv(appiconsize), gv(deviceappiconpadding) = 0, 0, gv(deviceiconsize)))$
$lv(boxsize1, if(gv(widgetorient) = 0, gv(generated/box2width), gv(generated/box2height)))$
$lv(boxsize2, (#boxsize1 - #devicosi) / #icon)$
$if(#boxsize2 <= 2, 2, (tc(cut, mu(abs,#boxsize2), 1)))$

V2
$lv(icon, gv(iconsize) + gv(iconpaddinginstack))$
$lv(devicosi, if(gv(icodevge) gv(icodev), gv(icodev), gv(icosm)))$
$lv(devicopd, if(icopadr = 0, #devicosi), 0)$
$lv(boxsize1, if(gv(wgtalign) = 0, gv(generated/lgboxw), gv(generated/lgboxh)))$
$lv(boxsize2, #boxsize1 - #devicopd)$
$lv(count, #boxsize2 / #icon)$
$if(#count <= 2, 2, tc(cut, mu(abs,#count), 1))$

$/* generated number of icons able to be shown in Box 2
Calculate icon sizes, devicopd and widget alignment */$
$lv(icon, gv(iconsize) + gv(iconpaddinginstack))$
$lv(devicosi, if(gv(icodevge) = gv(icodev), gv(icodev), gv(icosm)))$
$lv(devicopd, if(icopadr = 0, #devicosi), 0)$
$lv(boxsize1, if(gv(wgtalign) = 0, gv(generated/lgboxw), gv(generated/lgboxh)))$

$/* Subtract settings icons, unless they're hidden.
Get final number: Icon size / Box - settings */$
$lv(boxsize2, #boxsize1 - #devicopd)$
$lv(count, #boxsize2 / #icon)$
$/* mu(abs) removes decimal point. This causes the count to round up and formats it for use.*/$
$if(#count <= 2, 2, tc(cut, mu(abs,#count), 1))$

V1
$/* generated number of icons able to be shown
Calculate icon sizes, devicopd and widget alignment */
lv(icon, gv(iconsize) + gv(iconpaddinginstack))$$lv(lgbox, if(gv(wgtalign) = 0, gv(generated/lgboxw), gv(generated/lgboxh)))$

$/* Subtract settings icons, unless they're gone.
Get final number: Icon size / Box - settings */
lv(adjustment, if(gv(icopadr) = 0, gv(icosm), 0))$
$lv(boxsize, #lgbox - #adjustment)$
$lv(count, #boxsize / #icon)$
$if(#count <= 2, 2, tc(cut, mu(abs,#count), 1))$


----------------------------------------

ROW AND COLUMN PADDING

SKIPPED:
B12R3D - Custom Template
B12R3D - Lighting Template

----------------------------------------
- Merge all three functions together, calling the same global function for data.
- Output will be a replacement for devicosize

deviceiconsizecalc: Formula for calculating the current size of Device Icon to use for different formulas
iconcount:          Formula for calculating how many icons can fit inside of Box 2. Device icon size is used in calculation
box2minsize:        Calculate the minimum size Box 2 can be, using iconcount and devicosize in calculation
devicosize:         Caculate the size of the Device Icon, based on iconcount

deviceiconsizecalc uses iconcount to determine if it should autoshrink or not
do all calculations for size in global formula with local variables
change devicosize to use previous calculations in lv


gv iconcount
$lv(boxsize1, (if(gv(widgetorient) = 0, gv(generated/box2width), gv(generated/box2height))))$
$lv(boxsize2, (#boxsize1 - gv(deviceiconsize)) / (gv(iconsize) + gv(iconpaddinginstack)))$
$lv(boxsize3, (#boxsize1 - gv(appiconsize)) / (gv(iconsize) + gv(iconpaddinginstack)))$
$lv(boxsize, (if(#boxsize2 < 4, #boxsize3, #boxsize2)))$
$lv(icocount, if(#boxsize <= 2, 2, (tc(cut, mu(abs,#boxsize), 1))))$$#icocount$

gv devicosize
$if(gv(deviceiconshrink) = 1 | gv(box1dir2) = 1, (gv(appiconsize) + gv(iconpaddinginstack)),
    gv(generated/iconcount) < 4 & gv(deviceiconshrink) = 2, (gv(appiconsize) + gv(iconpaddinginstack)),
    gv(deviceiconsize)
)$

gv box2minsize
$lv(devico, (if(gv(deviceiconposition) = 2 | gv(deviceiconposition) = 4 | gv(deviceappiconpadding) = 0, 0, gv(generated/devicosize))))$
$((gv(iconsize) * 2) + 
  (gv(iconpaddinginstack) * 2) + 
  #devico + 
  (gv(iconpaddingbox) * 2)
)$

// box2width ALSO LOOPS WITH box2minsize - fix
V3
$if(gv(widgetorient) = 1 | gv(box1dir1) = 0,
    gv(generated/widgetwidth),
        (if(gv(generated/widgetwidth) <= gv(generated/box2minsize),
        gv(generated/box2minsize),
    (gv(generated/widgetwidth) - gv(generated/box1width))
)))$

$if(gv(widgetorient) = 1, gv(generated/box2width), (if(gv(generated/widgetwidth) <= gv(generated/box2minsize),
        gv(generated/box2minsize),
    (gv(generated/widgetwidth) - gv(generated/box1width))
)))$
  ----------------------------------------
  BACKUP

// formulas/deviceiconsizecalc
$lv(devicocu,
  if(
    gv(deviceiconposition) = 4 | gv(deviceappiconpadding) = 1, 0,
    gv(deviceiconposition) = 2 | gv(deviceiconshrink) = 1, gv(appiconsize),
    gv(generated/devicosize)
  )
)$

// formulas/iconcount?
V4
$gv(formulas/deviceiconsizecalc)$
$lv(boxsize1, if(gv(widgetorient) = 0, gv(generated/box2width), gv(generated/box2height)))$
$lv(boxsize2, (#boxsize1 - #devicocu) / (gv(iconsize) + gv(iconpaddinginstack)))$
$lv(icocount, (if(#boxsize2 <= 2, 2, (tc(cut, mu(abs,#boxsize2), 1)))))$



// box2minsize
V3

$gv(formulas/deviceiconsizecalc)$
$((gv(iconsize) * 2) + 
  (gv(iconpaddinginstack) * 2) + 
  #devicocu + 
  (gv(iconpaddingbox) * 2)
)$

// generated/devicosize
V5

$gv(formulas/deviceiconsizecalc)$
$lv(autoshr, (if(gv(generated/iconcount) < 4 & gv(deviceiconshrink) = 2, 1, 0)))$
$if(#autoshr = 1 | gv(deviceiconshrink) = 1 | gv(box1dir2) = 1, (
  gv(iconpaddinginstack) + gv(appiconsize)), 
  #autoshr = 0 | gv(deviceiconshrink) = 0, gv(deviceiconsize))$
  
// box2width new
V3
$if(gv(widgetorient) = 1 | gv(box1dir1) = 0,
    gv(generated/widgetwidth),
   (gv(generated/widgetwidth) - gv(generated/box1width))
)$