{
  "preset_info": {
    "archive": "",
    "author": "Corey Welsh",
    "description": "Home Assistant Device Control Widget",
    "email": "coreyw2000@gmail.com",
    "features": "WEATHER",
    "pflags": 0,
    "hash": null,
    "height": 378,
    "id": "e202dcdc-76b3-4dec-915d-f1a6043d0679",
    "locked": false,
    "release": 378512316,
    "ts": 1748055932482,
    "title": "0.7A",
    "version": 13,
    "width": 1080,
    "xscreens": 0,
    "yscreens": 0
  },
  "preset_root": {
    "internal_type": "RootLayerModule",
    "globals_list": {
      "readme": {
        "index": 1,
        "type": "LIST",
        "title": "README",
        "entries": "See readme.md for instructions on how to connect HAWGTS with your Home Assistant system. Follow the instructions below to setup your widget with the settings in this menu\n\n1. Choose a theme. Change any theme settings or colors you'd like to make it your own, or skip this part\n2. Set your device type, then toggle through the templates to see which one works for your layout and launcher\n3. Set your entity_id(s) from Home Assistant\n\nThe widget should now be able to control your configured device. Once your first widget is complete, export it from KWGT to make copies of your customized widget for other devices",
        "value": "Tap to open"
      },
      "settheme": {
        "index": 2,
        "type": "LIST",
        "title": "settheme",
        "description": "Select the theme to use on this widget. Open the \"theme\" folder below to customize it",
        "entries": "OneUI,Material,Basic",
        "value": "Basic"
      },
      "devicetype": {
        "index": 3,
        "type": "LIST",
        "title": "devicetype",
        "description": "Select the type of device to control",
        "entries": "DATA##\"Select the type of device to control\",light##Lights,climate##Climate,tv##Television,sound##Sound System,security##Security,lock##Doors and Locks,power##Charging and Battery,remote##Remote control,appliance##Home Appliances,home##Home Features?,electronics#Personal Electronics,maintence##Home Maintence,custom##Custom",
        "value": "light"
      },
      "templateselect": {
        "index": 4,
        "type": "LIST",
        "title": "templateselect",
        "description": "Select the layout template to use for your device(s)",
        "entries": "DATA##\"Select the layout template to use for your device(s)\",1##Template 1,2##Template 2,3##Template 3,4##Template 4,5##Template 5,6##Template 6,0##Custom Template",
        "value": "1"
      },
      "templatename": {
        "index": 5,
        "type": "TEXT",
        "title": "templatename",
        "description": "Debugging - Chosen Template name",
        "value": "Light - 2-4 Page/Device, 2 Row"
      },
      "templateinfo": {
        "index": 6,
        "type": "LIST",
        "title": "templateinfo",
        "description": "Template Description via flow",
        "value": ""
      },
      "fitmoreobj": {
        "index": 7,
        "type": "SWITCH",
        "title": "fitmoreobj",
        "description": "Disable widget object count restrictions to use templates that are close to fitting. May cause overlap",
        "value": 0
      },
      "theme": {
        "index": 8,
        "type": "FOLDER",
        "title": "theme",
        "description": "Override preset sizing and alignment variables"
      },
      "theme/themeinfo": {
        "index": 9,
        "type": "LIST",
        "title": "THEME",
        "value": "Tap to open",
        "description": "User custom theme instructions",
        "entries": "\"Use this to override theme properties set by the theme JSON. This includes colors, sizing, padding, etc. All values in this folder are ignored when empty (unless otherwise indicated).\n\nSee readme for more information and JSON config\""
      },
      "theme/objsize": {
        "index": 10,
        "type": "NUMBER",
        "title": "objsize",
        "description": "(Preset to 90) - Size of the object rings",
        "min": 20,
        "max": 200,
        "value": 90.0
      },
      "theme/iconsize": {
        "index": 11,
        "type": "NUMBER",
        "title": "iconsize",
        "description": "Icon ring percentange/ratio (icon background:icon size)",
        "min": 0,
        "max": 100
      },
      "theme/deviceiconsize": {
        "index": 12,
        "type": "NUMBER",
        "title": "deviceiconsize",
        "description": "(Preset to 120) - Size of the Device Icon",
        "value": 120.0,
        "min": 0,
        "max": 450
      },
      "theme/deviceiconrotation": {
        "index": 13,
        "type": "LIST",
        "title": "deviceiconrotation",
        "entries": "DATA##\"Rotate or flip the device icon on your Widget\",NONE##0 Degrees,DEG90##90 Degrees,DEG180##180 Degrees,DEG270##180 Degrees,FLIP_X##Flip Vertically,FLIP_Y##Flip Horizontally",
        "value": "FLIP_Y"
      },
      "theme/ringshape": {
        "index": 14,
        "type": "LIST",
        "title": "ringshape",
        "description": "Shape of the ring around the icons",
        "entries": "0##Not Set,SQUARE##Square,CIRCLE##Circle,SQUIRCLE##Squircle,RECT##Rectangle,OVAL##Oval,TRIANGLE##Triangle",
        "value": ""
      },
      "theme/darkmode": {
        "index": 15,
        "type": "SWITCH",
        "title": "darkmode",
        "description": "Enable/disable system dark mode. Override by editing and removing the formula",
        "value": 0,
        "on_mode": "MANUAL_FORMULA",
        "on_formula": "$gv(func/theme)$$if(#themename != \"Custom\" & si(darkmode) = 1, 1)$",
        "off_mode": "MANUAL_FORMULA",
        "off_formula": "$gv(func/theme)$$if(#themename != \"Custom\" & si(darkmode) = 0, 0)$"
      },
      "theme/shadow": {
        "index": 16,
        "type": "SWITCH",
        "title": "shadow",
        "description": "Enable/disable shadow. Override by editing and removing the formula",
        "on_mode": "MANUAL_FORMULA",
        "on_formula": "$gv(func/theme)$$if(#tshadow != \"0\", ON)$",
        "off_mode": "MANUAL_FORMULA",
        "off_formula": "$gv(func/theme)$$if(#tshadow = \"0\", OFF)$"
      },
      "theme/bordersize": {
        "index": 17,
        "type": "NUMBER",
        "title": "bordersize",
        "description": "Size of the border",
        "min": 0,
        "max": 50
      },
      "theme/opacity": {
        "index": 18,
        "type": "NUMBER",
        "title": "opacity",
        "description": "Opacity of the widget background",
        "min": 0,
        "max": 100
      },
      "theme/cornerradius": {
        "index": 19,
        "type": "NUMBER",
        "title": "cornerradius",
        "description": "Radius of the widgets rounded corners",
        "min": 0,
        "max": 100
      },
      "theme/objpaddinghor": {
        "index": 20,
        "type": "NUMBER",
        "title": "objpaddinghor",
        "description": "Object padding across each row",
        "min": 0,
        "max": 50
      },
      "theme/objpaddingver": {
        "index": 21,
        "type": "NUMBER",
        "title": "objpaddingver",
        "description": "Object padding between the two rows",
        "min": 0,
        "max": 50
      },
      "theme/objpaddingside": {
        "index": 22,
        "type": "NUMBER",
        "title": "objpaddingside",
        "description": "Padding from the edge of the box to the first icon",
        "min": 0,
        "max": 50
      },
      "theme/wgtpaddingver": {
        "index": 23,
        "type": "NUMBER",
        "title": "wgtpaddingver",
        "description": "Widget vertical padding",
        "min": 0,
        "max": 50
      },
      "theme/wgtpaddinghor": {
        "index": 24,
        "type": "NUMBER",
        "title": "wgtpaddinghor",
        "description": "Widget horizontal padding",
        "min": 0,
        "max": 50
      },
      "theme/advanced": {
        "index": 25,
        "type": "FOLDER",
        "title": "advanced",
        "description": "Advanced alignment settings"
      },
      "theme/advanced/box1sq": {
        "index": 26,
        "type": "SWITCH",
        "title": "box1sq",
        "description": "Make Box 1 a perfect square",
        "value": 0
      },
      "theme/advanced/boxtoggle": {
        "index": 27,
        "type": "SWITCH",
        "title": "boxtoggle",
        "description": "Set the order of the boxes on your widget",
        "value": "1"
      },
      "theme/advanced/autoalign": {
        "index": 28,
        "type": "SWITCH",
        "title": "autoalign",
        "description": "Turn off to override the following widget alignments",
        "value": 1
      },
      "theme/advanced/widgetorient": {
        "index": 29,
        "type": "SWITCH",
        "title": "widgetorient",
        "description": "Set horizontal or vertical orientation of widget",
        "value": 1,
        "on_mode": "MANUAL_FORMULA",
        "on_formula": "$if(gv(theme/advanced/autoalign) = 1, (si(rratio) < 0.8, 0))$",
        "off_mode": "MANUAL_FORMULA",
        "off_formula": "$if(gv(theme/advanced/autoalign) = 1, (si(rratio) > 0.8, 0))$"
      },
      "theme/advanced/box1pos": {
        "index": 30,
        "type": "LIST",
        "title": "theme/advanced/box1pos",
        "description": "Set position of Box 1",
        "value": "LEFT",
        "entries": "LEFT##Left - Horizontal Layout, RIGHT##Right - Horizontal Layout, TOP##Top - Vertical Layout, BOTTOM##Bottom - Vertical Layout"
      },
      "theme/advanced/box1size": {
        "index": 31,
        "type": "NUMBER",
        "title": "box1size",
        "description": "Override Box 1 size set from Flow",
        "value": "   217",
        "min": 0,
        "max": 720
      },
      "colors": {
        "index": 32,
        "type": "FOLDER",
        "title": "colors",
        "description": "Override preset theme colors"
      },
      "colors/themeinfo": {
        "index": 33,
        "type": "LIST",
        "title": "themeinfo",
        "value": "OPEN - Information",
        "description": "User custom theme instructions",
        "entries": "Use this to override color properties set by the theme JSON. All values in this folder are ignored when empty.\n\nThere is also a color generator to use your phone's system colors and an editor to modify colors\n\nSee readme for more information and JSON config"
      },
      "colors/reset": {
        "index": 34,
        "type": "SWITCH",
        "title": "reset",
        "description": "Reset all colors in folder",
        "value": 0,
        "off_mode": "MANUAL_FORMULA",
        "off_formula": "$if(gv(colors/back1=\"\"&colors/back2=\"\"&colors/objiconon=\"\"&colors/objiconoff=\"\"&colors/objringon=\"\"&colors/objringoff=\"\"&colors/border=\"\",0))$"
      },
      "colors/ringrandom": {
        "index": 35,
        "type": "SWITCH",
        "title": "ringrandom",
        "description": "Random colors for the object ring. Must be configured in theme",
        "value": 0
      },
      "colors/back1": {
        "index": 36,
        "type": "COLOR",
        "title": "back1",
        "description": "Background color 1",
        "value": ""
      },
      "colors/back2": {
        "index": 37,
        "type": "COLOR",
        "title": "back2",
        "description": "Background color 2",
        "value": ""
      },
      "colors/objiconon": {
        "index": 38,
        "type": "COLOR",
        "title": "objiconon",
        "description": "Object Icon - State on",
        "value": ""
      },
      "colors/objiconoff": {
        "index": 39,
        "type": "COLOR",
        "title": "objiconoff",
        "description": "Object Icon - State off",
        "value": ""
      },
      "colors/objringon": {
        "index": 40,
        "type": "COLOR",
        "title": "objringon",
        "description": "Object Ring - State on",
        "value": ""
      },
      "colors/objringoff": {
        "index": 41,
        "type": "COLOR",
        "title": "objringoff",
        "description": "Object Ring - State off",
        "value": ""
      },
      "colors/border": {
        "index": 42,
        "type": "COLOR",
        "title": "border",
        "description": "Border color",
        "value": ""
      },
      "colors/colorgen": {
        "index": 43,
        "type": "FOLDER",
        "title": "colorgen",
        "description": "Generate colors for your widget from the system"
      },
      "colors/colorgen/info": {
        "index": 44,
        "type": "LIST",
        "title": "info",
        "value": "OPEN - Information",
        "description": "Color generator instructions",
        "entries": "Use this color generator to get colors from your device theme and modify them\n\nThis is based on \"Material Design\" specifications. So \"Primary 80\" should be Accent #1 + 80% tone. See specifications online and readme for more details.\n\nNote: Background color opacity can also be set in the \"theme\" folder\n\nYou will have to copy the color to where you want to use it when generated"
      },
      "colors/colorgen/syscolorset": {
        "index": 45,
        "type": "LIST",
        "title": "syscolorset",
        "description": "Select a color tone",
        "entries": "0##None,1##Accent #1,2##Accent #2,3##Accent #3,4##Neutral #1,5##Neutral #2,6##Neutral #3",
        "value": "2"
      },
      "colors/colorgen/adjtone": {
        "index": 46,
        "type": "NUMBER",
        "title": "adjtone",
        "description": "Strength of color tone - 0 = Black, 100 = White",
        "min": 0,
        "max": 100,
        "value": 50.0
      },
      "colors/colorgen/opacity": {
        "index": 47,
        "type": "NUMBER",
        "title": "opacity",
        "description": "Opacity Adjustment - 0 = Transparent, 255 = Solid",
        "min": 0,
        "max": 255,
        "value": 50.0
      },
      "colors/colorgen/output": {
        "index": 48,
        "type": "COLOR",
        "title": "output",
        "description": "Color output. Tap to tweak and copy hex code to \"colors\" folder",
        "value": "#80537C89"
      },
      "colors/coloredit": {
        "index": 49,
        "type": "FOLDER",
        "title": "coloredit",
        "description": "Edit colors for your widget from the theme or wallpaper"
      },
      "colors/coloredit/info": {
        "index": 50,
        "type": "LIST",
        "title": "info",
        "value": "OPEN - Information",
        "description": "Color editor instructions",
        "entries": "Use this color editor to modify the existing colors used in your theme, or extracted from your wallpaper\n\nSelect the color source you want to modify. Colors are from the selected theme or your overridden color, if set. Wallpaper colors are extracted from the device wallpaper by KWGT.\n\nNote: Background color opacity can also be set in the \"theme\" folder\n\nYou will have to copy the color to where you want to use it once complete"
      },
      "colors/coloredit/editcolor": {
        "index": 51,
        "type": "LIST",
        "title": "edit",
        "description": "Select the color to edit",
        "entries": "back1##Background 1,back2##Background 2,objiconoff##Icon Off,objiconon##Icon On,cobjringoff##Ring Off,cobjringon##Ring On,border##Border Color,wpcolor1##Wallpaper Color 1,wpcolor2##Wallpaper Color 2,wpcolor3##Wallpaper Color 3",
        "value": "wpcolor1"
      },
      "colors/coloredit/filter": {
        "index": 52,
        "type": "LIST",
        "title": "wallcolorset",
        "description": "Select a color filter",
        "entries": "0##None, 1##Saturation, 2##Brightness, 3##Complimentary Color",
        "value": "2"
      },
      "colors/coloredit/adjfilter": {
        "index": 53,
        "type": "NUMBER",
        "title": "adjcolor",
        "description": "Strength of color filter",
        "min": 0,
        "max": 100,
        "value": 60.0
      },
      "colors/coloredit/opacity": {
        "index": 54,
        "type": "NUMBER",
        "title": "opacity",
        "description": "Opacity Adjustment - 0 = Transparent, 100 = Solid",
        "min": 0,
        "max": 100,
        "value": 80.0
      },
      "colors/coloredit/output": {
        "index": 55,
        "type": "COLOR",
        "title": "output",
        "description": "Color output. Tap to tweak and copy hex code to \"colors\" folder",
        "value": "#CC000000"
      },
      "entities": {
        "index": 56,
        "type": "FOLDER",
        "title": "entities",
        "description": "Home Assistant \"entity_id\" to use"
      },
      "entities/entitynote": {
        "index": 57,
        "type": "LIST",
        "title": "entitynote",
        "description": "User entity instructions",
        "entries": "\"ENTITY LIST\n\nIf you're only controlling one device, enter it in \"entity1\". If you're controlling more than one, enter them in the order they appear in the template. (1st device is \"entity1\", 2nd is \"entity2\", etc)\"",
        "value": "OPEN - Information"
      },
      "entities/entity1": {
        "index": 58,
        "type": "TEXT",
        "title": "entity1",
        "description": "Device 1 Entity ID",
        "value": "light.bedroom_lights"
      },
      "entities/entity2": {
        "index": 59,
        "type": "TEXT",
        "title": "entity2",
        "description": "Device 2 Entity ID",
        "value": "light.ensuite_light"
      },
      "entities/entity3": {
        "index": 60,
        "type": "TEXT",
        "title": "entity3",
        "description": "Device 3 Entity ID",
        "value": "light.closet_light"
      },
      "entities/entity4": {
        "index": 61,
        "type": "TEXT",
        "title": "entity4",
        "description": "Device 4 Entity ID",
        "value": "light.kitchen_lights"
      },
      "external": {
        "index": 62,
        "type": "FOLDER",
        "title": "external",
        "description": "Configure device icon and app icon apps to open"
      },
      "external/devicon": {
        "index": 63,
        "type": "LIST",
        "title": "devicon",
        "description": "Select an app to open on touch: Device icon",
        "entries": "1##This device in Home Assistant App,2##Home Assistant App,3##Home Assistant Assist,4##KWGT Editor (Great while configuring widget),5##Custom",
        "value": "4"
      },
      "external/appicon1": {
        "index": 64,
        "type": "LIST",
        "title": "appicon1",
        "description": "Select an app to open on touch: App icon #1",
        "entries": "0##Hidden,1##This device in Home Assistant App,2##Home Assistant App,3##Home Assistant Assist,4##KWGT Editor (Great while configuring widget),5##Custom",
        "value": "2"
      },
      "external/appicon2": {
        "index": 65,
        "type": "LIST",
        "description": "Select an app to open on touch: App icon #2",
        "title": "appicon2",
        "entries": "0##Hidden,1##This device in Home Assistant App,2##Home Assistant App,3##Home Assistant Assist,4##KWGT Editor (Great while configuring widget),5##Custom",
        "value": "3"
      },
      "external/appiconsize": {
        "index": 66,
        "type": "NUMBER",
        "title": "appiconsize",
        "description": "(Preset to 32) Size of the small app-launcher objects",
        "min": 20,
        "max": 75,
        "value": 32.0
      },
      "external/custom": {
        "index": 67,
        "type": "TEXT",
        "title": "custom",
        "description": "Enter the Android package name to open (eg com.android.appname)",
        "value": ""
      },
      "core": {
        "index": 68,
        "type": "FOLDER",
        "title": "core",
        "description": "Core globals for status and tasker"
      },
      "core/curpage": {
        "index": 69,
        "type": "NUMBER",
        "title": "curpage",
        "description": "Current page for paged templates",
        "value": "1"
      },
      "core/randomring": {
        "index": 70,
        "type": "TEXT",
        "title": "randomring",
        "description": "Code for ring \"paint_color\" attribute",
        "value": "gv(func/theme) + if(tc(json, #dbtheme, (#settheme + \".colors.pastel.\" + i)) !=\"\", i)"
      },
      "core/tasker": {
        "index": 71,
        "type": "FOLDER",
        "title": "tasker",
        "description": "Tasker"
      },
      "core/tasker/fromtasker": {
        "index": 72,
        "type": "TEXT",
        "title": "fromtasker",
        "description": "State information sent from tasker to apply to \"json/device\"",
        "value": "$br(tasker, states)$ "
      },
      "core/tasker/status": {
        "index": 73,
        "type": "TEXT",
        "title": "status",
        "description": "Status and error messages from Tasker",
        "value": "$br(tasker, error)$ "
      },
      "core/tasker/temp": {
        "index": 74,
        "type": "TEXT",
        "title": "temp",
        "description": "Temp storage for Tasker > KWGT flow",
        "value": ""
      },
      "core/status": {
        "index": 75,
        "type": "FOLDER",
        "title": "status",
        "description": "Status system"
      },
      "core/status/currentstatus": {
        "index": 76,
        "type": "TEXT",
        "title": "currentstatus",
        "description": "Current status or last status displayed",
        "value": ""
      },
      "core/status/setstatus": {
        "index": 77,
        "type": "TEXT",
        "title": "setstatus",
        "description": "",
        "value": "01"
      },
      "core/status/statustimer": {
        "index": 78,
        "type": "SWITCH",
        "title": "statustimer",
        "description": "Time to display Status message",
        "value": 1
      },
      "func": {
        "index": 79,
        "type": "FOLDER",
        "title": "func",
        "description": "Global functions"
      },
      "func/jsonmain": {
        "index": 80,
        "type": "TEXT",
        "title": "jsonmain",
        "description": "Load JSON data for following 3 global variables",
        "value": "$lv(dbtemp, gv(json/template))$$lv(dbdev, gv(json/device))$$lv(template, (\".\" + gv(devicetype) + \".\" + (gv(devicetype) + gv(templateselect))))$$lv(tpageon, (tc(json, #dbtemp, (#template + \".page\"))))$$lv(obj, \".\" + gv(devicetype) + \".objects\")$$lv(curpage, gv(core/curpage))$$lv(objfindkey,(if(#tpageon = 0, (#template + #posid),(#template + \".page\" + #curpage + #posid))))$$lv(objkey, (if((tc(json, #dbtemp, #objfindkey)) = \"\", \"\",(#obj + \".\" + (tc(json, #dbtemp, #objfindkey))))))$$lv(entity,(if(#tpageon = 0, gv(entities/entity1),gv(entities/(\"entity\" + #curpage)))))$$lv(entitykey, (if(#entity != \"\",\".device_states[?(@.entity_id == '\" + #entity + \"')]\")))$$lv(box1obj,(tc(json, #dbtemp,(if(#tpageon = 0, (#template + \".box1.row1.1\"),(#template + \".page\" + #curpage + \".box1.row1.1\"))))))$"
      },
      "func/jsonstate": {
        "index": 81,
        "type": "TEXT",
        "title": "jsonstate",
        "description": "Get the current state of devices. Call with #posid \".box1.row2.0\"",
        "value": "$gv(func/jsonmain)$$lv(obtype,\t(tc(json,#dbtemp,(#objkey+\".type\"))))$$lv(obonstate,\t(tc(json,#dbtemp,(#objkey+\".onstate\"))))$$lv(oblevelh,\t(if(#obonstate!=\"\",(tc(split,#obonstate,\">\",1)))))$$lv(oblevell,\t(if(#obonstate!=\"\",(tc(split,#obonstate,\">\",0)))))$$lv(ststate,\t(tc(json,#dbdev,(#entitykey+\".state\"))))$$lv(stlevelv,(tc(json,#dbdev,(#entitykey+\".brightness\"))))$$lv(stlevel,\t(if(#stlevelv!=\"\",#stlevelv,0)))$$lv(stcolor,\t(tc(json,#dbdev,(#entitykey+\".color\"))))$$lv(stcustom,\t(tc(json,#dbdev,(#entitykey+\".\"+#keyname))))$$lv(stobtype,(if(#obonstate~=\"\\d+>\\d+\"&#obtype=\"action\"&#ststate!=\"off\",\"range\",#obonstate~=\"page\\d\"&#obtype=\"page\",\t\t\t\t\t\t\t\t\t\t\"page\",#obonstate=\"off\"&#obtype=\"action\",\t\t\t\t\t\t\t\t\t\t\"off\",#obonstate=\"0\"&#obtype=\"action\",\t\t\t\t\t\t\t\t\t\t\"off\",#obonstate=\"on\"&#obtype=\"action\",\t\t\t\t\t\t\t\t\t\t\"on\",#obonstate=\"\"|#obtype=\"\",\t\t\t\t\t\t\t\t\t\t\"nostate\",#obonstate)))$$lv(stoutput,(if(#stobtype!=\"range\",(if(#ststate!=\"\",if(#stobtype=\"page\"&#tpageon=1&(\"page\"+#curpage)=#obonstate,1,#stobtype=\"on\"&#ststate=\"on\",1,#stobtype=\"off\"&#ststate=\"off\",1,#stobtype=\"nostate\",0,0),0)),(if(#stobtype=\"range\"&#stlevel>=#oblevell&#stlevel<=#oblevelh,1,0)))))$"
      },
      "func/jsonobj": {
        "index": 82,
        "type": "TEXT",
        "title": "jsonobj",
        "description": "Get object information. Call with #posid \".box1.row2.0\"",
        "value": "$gv(func/jsonmain)$$lv(obid,(if(#objkey!=\"\",1,0)))$$lv(obtype,(tc(json,#dbtemp,(#objkey+\".type\"))))$$lv(obicon,(tc(json,#dbtemp,(#objkey+\".icon\"))))$$lv(obaction,(tc(json,#dbtemp,(#objkey+\".action\"))))$$lv(obcmd,(tc(json,#dbtemp,(#objkey+\".cmd\"))))$$lv(obdata,(tc(json,#dbtemp,(#objkey+\".data\"))))$$lv(obparam,(if(#obaction=\"light\",(#obcmd+\":\"+#obdata),#obaction=\"template\",#obdata,\"\")))$"
      },
      "func/jsontemp": {
        "index": 83,
        "type": "TEXT",
        "title": "jsontemp",
        "description": "Get template information",
        "value": "$gv(func/jsonmain)$$lv(tname,(tc(json,#dbtemp,(#template+\".name\"))))$$lv(ticon,(tc(json,#dbtemp,(#template+\".icon\"))))$$lv(tbox1,(tc(json,#dbtemp,(#template+\".box1_size\"))))$$lv(trowct,(tc(json,#dbtemp,(#template+\".row_count\"))))$$lv(ticopos,(tc(json,#dbtemp,(#template+\".device_icon_pos\"))))$$lv(tdevct,(tc(json,#dbtemp,(#template+\".device_count\"))))$"
      },
      "func/alignment": {
        "index": 84,
        "type": "TEXT",
        "title": "alignment",
        "description": "Variables for use in alignment globals and objects",
        "value": "$gv(func/theme)$$gv(func/jsontemp)$$lv(align,gv(theme/advanced/widgetorient))$$lv(override,gv(theme/advanced/autoalign))$$lv(invert,gv(theme/advanced/boxtoggle))$$lv(box1pos,gv(theme/advanced/box1pos))$$lv(box1size,gv(theme/advanced/box1size))$$lv(objsize,gv(theme/objsize))$$lv(wgtwidth,(si(rwidth)-(#padwgtver*2)))$$lv(wgtheight,(si(rheight)-(#padwgthor*2)))$$lv(wgtdir,(if(#align=0,#wgtheight,#wgtwidth)))$$lv(wgtdirop,(if(#align=0,#wgtwidth,#wgtheight)))$$lv(devobjpos,(if(#align=0,#wgtheight,#box1size)))$$lv(objiconsize,(#objsize-(#objsize*#iconsize/100)))$$lv(devposcalc,((#devobjpos/2)+#padwgtver-(gv(theme/deviceiconsize)/2)))$$lv(box2obj,(#objsize+#padobjhor))$$lv(box2width,(if(#tbox1=0|#align=1,#wgtwidth,(#wgtdirop-#box1size))))$$lv(box2height,(if(#tbox1=0|#align=0,#wgtheight,(#wgtdirop-#box1size))))$$lv(box2dir,(if(#align=0,#box2width,#box2height)))$$lv(box2size,(#box2dir-gv(theme/deviceiconsize))/(#box2obj+#padobjhor))$$lv(box2maxobj,(if(gv(fitmoreobj)=0,(if(#box2size<=2,2,mu(round,#box2size))),10)))$$lv(box1sm,(#objsize+(#padobjside*2)*100/#wgtdir))$$lv(box1lg,(((#objsize+#padobjside)*2)+#padobjhor))$$lv(L,\"LEFT\")$$lv(R,\"RIGHT\")$$lv(T,\"TOP\")$$lv(B,\"BOTTOM\")$$lv(C,\"CENTER\")$$lv(box1anchor,(if(#box1pos=#R,(#C+#R),#box1pos=#L,(#C+#L),#box1pos=#T,#T,#box1pos=#B,#B)))$$lv(box1center,(if(#box1pos=#R,(\"VERTICAL_\"+#R),#box1pos=#L,(\"VERTICAL_\"+#L),#box1pos=#T,(\"VERTICAL_\"+#T),#box1pos=#B,(\"VERTICAL_\"+#B))))$$lv(devicopos,if(#box1pos=#R,(if(#ticopos=1,(#T+#L),#ticopos=2,(#C+#R),#ticopos=3,(#B+#L))),#box1pos=#L,(if(#ticopos=1,(#T+#R),#ticopos=2,(#C+#L),#ticopos=3,(#B+#R))),#box1pos=#T,(if(#ticopos=1,(#B+#L),#ticopos=2,#T,#ticopos=3,(#B+#R))),#box1pos=#B,(if(#ticopos=1,(#T+#L),#ticopos=2,#B,#ticopos=3,(#T+#R)))))$$lv(appicopos,(if(#box1pos=#R,(#B+#L),#box1pos=#L,(#B+#R),#box1pos=#T,(#B+#R),#box1pos=#B,(#T+#R))))$$lv(devicoalign,(if(#box1pos=#R|#box1pos=#L,1,#box1pos=#T|#box1pos=#B,0)))$$lv(pad1,if(#align=0,\"#padobjver\",\"#padobjhor\"))$$lv(pad2,if(#align=0,\"#padobjhor\",\"#padobjver\"))$$lv(pad3,if(#align=0,\"#padwgtver\",\"#padwgthor\"))$"
      },
      "func/theme": {
        "index": 85,
        "type": "TEXT",
        "title": "theme",
        "description": "Variables for use in theme globals and objects",
        "value": "$lv(dbtheme,gv(json/theme))$$lv(settheme,gv(settheme))$$lv(tborder,(tc(json,#dbtheme,(\".\"+#settheme+\".border_width\"))))$$lv(tradius,(tc(json,#dbtheme,(\".\"+#settheme+\".corner_radius\"))))$$lv(tpadwgt,(tc(json,#dbtheme,(\".\"+#settheme+\".pad_widget\"))))$$lv(tpadobj,(tc(json,#dbtheme,(\".\"+#settheme+\".pad_obj\"))))$$lv(tpadside,(tc(json,#dbtheme,(\".\"+#settheme+\".pad_sides\"))))$$lv(tdevico,(tc(json,#dbtheme,(\".\"+#settheme+\".dev_ico_ring\"))))$$lv(tringsha,(tc(json,#dbtheme,(\".\"+#settheme+\".ring_shape\"))))$$lv(ticonsize,(tc(json,#dbtheme,(\".\"+#settheme+\".ring_percent\"))))$$lv(tringrnd,(tc(json,#dbtheme,(\".\"+#settheme+\".ring_random\"))))$$lv(tshadow,(tc(json,#dbtheme,(\".\"+#settheme+\".shadow\"))))$$lv(twgtopa,(tc(json,#dbtheme,(\".\"+#settheme+\".wgt_opacity\"))))$$lv(gborder,gv(theme/bordersize))$$lv(gradius,gv(theme/cornerradius))$$lv(gpadwgtver,gv(theme/wgtpaddingver))$$lv(gpadwgthor,gv(theme/wgtpaddinghor))$$lv(gpadobjhor,gv(theme/objpaddinghor))$$lv(gpadobjver,gv(theme/objpaddingver))$$lv(gpadside,gv(theme/objpaddingside))$$lv(gringsha,gv(theme/ringshape))$$lv(giconsize,gv(theme/iconsize))$$lv(gringrnd,gv(colors/ringrandom))$$lv(gshadow,gv(theme/shadow))$$lv(gwgtopa,gv(theme/opacity))$$lv(border,(if(#gborder,(if((#gborder*1)<=0,#tborder,#gborder)),#tborder)))$$lv(radius,(if(#gradius,(if((#gradius*1)<=0,#tradius,#gradius)),#tradius)))$$lv(padwgtver,(if(#gpadwgtver,(if((#gpadwgtver*1)<=0,#tpadwgt,#gpadwgtver)),#tpadwgt)))$$lv(padwgthor,(if(#gpadwgthor,(if((#gpadwgthor*1)<=0,#tpadwgt,#gpadwgthor)),#tpadwgt)))$$lv(padobjhor,(if(#gpadobjhor,(if((#gpadobjhor*1)<=0,#tpadobj,#gpadobjhor)),#tpadobj)))$$lv(padobjver,(if(#gpadobjver,(if((#gpadobjver*1)<=0,#tpadobj,#gpadobjver)),#tpadobj)))$$lv(padobjside,(if(#gpadside,(if((#gpadside*1)<=0,#tpadside,#gpadside)),#tpadside)))$$lv(ringsha,(if(#gringsha,(if((#gringsha*1)<=0,#tringsha,#gringsha)),#tringsha)))$$lv(iconsize,(if(#giconsize,(if((#giconsize*1)<=0,#ticonsize,#giconsize)),#ticonsize)))$$lv(ringrnd,(if(#gringrnd,(if((#gringrnd*1)<=0,#tringrnd,#gringrnd)),#tringrnd)))$$lv(shadow,(if(#gshadow,(if((#gshadow*1)<=0,#tshadow,#gshadow)),#tshadow)))$$lv(wgtopa,(if(#gwgtopa,(if((#gwgtopa*1)<=0,#twgtopa,#gwgtopa)),#twgtopa)))$$lv(squircle,(#iconsize/70)*100)$"
      },
      "func/themecolors": {
        "index": 86,
        "type": "TEXT",
        "title": "themecolors",
        "description": "Variables for color outputs",
        "value": "$gv(func/theme)$$lv(darkmode,gv(theme/darkmode))$$lv(colors,if(#darkmode=0,(#settheme+\".colors.light\"),(#settheme+\".colors.dark\")))$$lv(cback1,(tc(json,#dbtheme,(\".\"+#colors+\".back_1\"))))$$lv(cback2,(tc(json,#dbtheme,(\".\"+#colors+\".back_2\"))))$$lv(cobjiconon,(tc(json,#dbtheme,(\".\"+#colors+\".obj_icon_on\"))))$$lv(cobjiconoff,(tc(json,#dbtheme,(\".\"+#colors+\".obj_icon_off\"))))$$lv(cobjringon,(tc(json,#dbtheme,(\".\"+#colors+\".obj_ring_on\"))))$$lv(cobjringoff,(tc(json,#dbtheme,(\".\"+#colors+\".obj_ring_off\"))))$$lv(cborder,(tc(json,#dbtheme,(\".\"+#colors+\".border\"))))$$lv(back1,(if(gv(colors/back1)!=\"\",gv(colors/back1),if(#cback1~=\"^#[a-fA-F0-9]*$\",#cback1,si(tc(split,#cback1,\",\",0),tc(split,#cback1,\",\",1))))))$$lv(back2,(if(gv(colors/back2)!=\"\",gv(colors/back2),if(#cback2~=\"^#[a-fA-F0-9]*$\",#cback2,si(tc(split,#cback2,\",\",0),tc(split,#cback2,\",\",1))))))$$lv(objiconon,(if(gv(colors/objiconon)!=\"\",gv(colors/objiconon),if(#cobjiconon~=\"^#[a-fA-F0-9]*$\",#cobjiconon,#cobjiconon=\"random\",\"random\",si(tc(split,#cobjiconon,\",\",0),tc(split,#cobjiconon,\",\",1))))))$$lv(objiconoff,(if(gv(colors/objiconoff)!=\"\",gv(colors/objiconoff),if(#cobjiconoff~=\"^#[a-fA-F0-9]*$\",#cobjiconoff,#cobjiconoff=\"random\",\"random\",si(tc(split,#cobjiconoff,\",\",0),tc(split,#cobjiconoff,\",\",1))))))$$lv(objringon,(if(gv(colors/objringon)!=\"\",gv(colors/objringon),if(#cobjringon~=\"^#[a-fA-F0-9]*$\",#cobjringon,#cobjringon=\"random\",\"random\",si(tc(split,#cobjringon,\",\",0),tc(split,#cobjringon,\",\",1))))))$$lv(objringoff,(if(gv(colors/objringoff)!=\"\",gv(colors/objringoff),if(#cobjringoff~=\"^#[a-fA-F0-9]*$\",#cobjringoff,#cobjringoff=\"random\",\"random\",si(tc(split,#cobjringoff,\",\",0),tc(split,#cobjringoff,\",\",1))))))$$lv(border,(if(gv(colors/border)!=\"\",gv(colors/border),if(#cborder~=\"^#[a-fA-F0-9]*$\",#cborder,si(tc(split,#cborder,\",\",0),tc(split,#cborder,\",\",1))))))$"
      },
      "func/status": {
        "index": 87,
        "type": "TEXT",
        "title": "status",
        "description": "Calculate widget status",
        "value": "$lv(dbstatus,gv(json/status))$$lv(status,gv(core/tasker/status))$lv(posid,(\".box2.row1.\"+(#box2maxobj-1)))$$gv(func/jsonobj)$$gv(func/themecolors)$$lv(comm1,if(#status!=\"\"|#status!=\"br(tasker,status)\",1,0))$$lv(comm2,if(#status!=\"\"|#status!=\"br(tasker,status)\",1,0))$$lv(comm3,if(#status!=\"\"|#status!=\"br(tasker,status)\",1,0))$$lv(widget1,if(#tname=\"\"|#ticon=\"\"|#tbox1=\"\"|#trowct=\"\"|#ticopos=\"\"|#tdevct=\"\"|#obid=\"\"|#obtype=\"\"|#obicon=\"\"|#obaction=\"\"|#obcmd=\"\"|#obdata=\"\"|#obparam=\"\",1,0))$$lv(widget2,if(#obtype=\"\"|#obonstate=\"\"|#ststate=\"\"|#stobtype=\"\"|#stoutput=\"\"|gv(json/device)=\"\",1,0))$$lv(widget3,if(#template=\"\"|#tpageon=\"\"|#obj=\"\"|#curpage=\"\"|#objfindkey=\"\"|#objkey=\"\"|#entity=\"\"|#entitykey=\"\"|#box1obj=\"\",1,0))$$lv(widget4,\"\")$$lv(template1,if(#obid=0,1,0))$$lv(template2,\"\")$$lv(theme1,if(#back1=\"\"|#back2=\"\"|#objiconon=\"\"|#objiconoff=\"\"|#objringon=\"\"|#objringoff=\"\"|#border=\"\",1,0))$$lv(theme2,\"\")$$lv(theme3,if(#dbtheme=\"\"|#settheme=\"\",1,0))$$lv(setup1,if(gv(devicetype)=\"DATA\",1,0))$$lv(error,(if(#comm1=1,(if(#error=\"\",#error+\";\")+\"comm,1\"),#comm2=1,(if(#error=\"\",#error+\";\")+\"comm,2\"),#comm3=1,(if(#error=\"\",#error+\";\")+\"comm,3\"),#widget1=1,(if(#error=\"\",#error+\";\")+\"widget,1\"),#widget2=1,(if(#error=\"\",#error+\";\")+\"widget,2\"),#widget3=1,(if(#error=\"\",#error+\";\")+\"widget,3\"),#widget4=1,(if(#error=\"\",#error+\";\")+\"widget,4\"),#template1=1,(if(#error=\"\",#error+\";\")+\"template,1\"),#template2=1,(if(#error=\"\",#error+\";\")+\"template,2\"),#theme1=1,(if(#error=\"\",#error+\";\")+\"theme,1\"),#theme2=1,(if(#error=\"\",#error+\";\")+\"theme,2\"),#setup1=1,(if(#error=\"\",#error+\";\")+\"setup,1\"))))$$lv(error1,tc(split,#error,\";\",0))$$lv(cat1,tc(split,#error1,\",\",0))$$lv(num1,tc(split,#error1,\",\",1))$"
      },
      "func/devjsonrem": {
        "index": 88,
        "type": "TEXT",
        "title": "devjsonrem",
        "description": "Device State - Remove entity",
        "value": "$tc(reg,#datawipe,(\"\\{\\\" + tc(utf, 22) + \"entity_id\" + \"\\\" + tc(utf, 22) + \":\\\" + tc(utf, 22) +#entity + \"\\\" + tc(utf, 22) + \".*?\\},\"),\"\")$"
      },
      "func/devjsonadd": {
        "index": 89,
        "type": "TEXT",
        "title": "devjsonadd",
        "description": "Device State - Add newlines and spaces to JSON",
        "value": "$tc(reg,tc(reg,tc(reg,tc(reg,tc(reg,tc(reg,tc(reg,tc(reg,#jsonout,\"\\},\",\"\\},\" + tc(utf, 0A)),\":\",\": \"),\"\\\" + tc(utf, 22) + \",\",\"\\\" + tc(utf, 22) + \",\" + tc(utf, 0A)),\"\\{\",\"\\{\" + tc(utf, 0A)),\"\\}\",tc(utf, 0A) + \"\\}\"),\"\\[\",\"\\[\" + tc(utf, 0A)),\"\\\" + tc(utf, 22) + \"device_states\\\" + tc(utf, 22) + \".*\",\"$0\"),\"\\]\",\"  ]\")$"
      },
      "func/devjsonindent": {
        "index": 90,
        "type": "TEXT",
        "title": "devjsonindent",
        "description": "Device State - Add indentation to JSON",
        "value": "$tc(reg,tc(reg,#jsonline,(\"(?<=\\[)[^\\[\\]]*(?=\\])\"),tc(utf, 0A) + \"    \" + #jarredit + tc(utf, 0A) + \"  \"),(\"(?<!\\[)(?<=\\n|^)\\s*(\" + tc(utf, 22) + \".*)\"),\"  $0\")$"
      },
      "func/devjsonnew": {
        "index": 91,
        "type": "TEXT",
        "title": "devjsonnew",
        "description": "Device State - Add new entity to bottom of list",
        "value": "$tc(reg, #jsonrem, \"\\},\\]\\}\", (\"\\},\" + #jsonwipe + \"\\]\\}\"))$"
      },
      "json": {
        "index": 92,
        "type": "FOLDER",
        "title": "JSON Data",
        "description": "JSON databases for widget"
      },
      "json/device": {
        "index": 93,
        "type": "TEXT",
        "title": "device",
        "description": "Device states database",
        "value": "{\n  \"device_states\": [\n       {\n      \"entity_id\": \"light.study_lights\",\n      \"state\": \"on\",\n      \"brightness\": \"125\",\n      \"color\": \"255,255,128,75\"\n    },\n    {\n      \"entity_id\": \"light.lr_lights\",\n      \"state\": \"off\",\n      \"brightness\": \"200\",\n      \"color\": \"255,200,128,80\"\n    },\n    {\n      \"entity_id\": \"light.foyer_lights\",\n      \"state\": \"on\",\n      \"brightness\": \"200\",\n      \"color\": \"255,200,128,80\"\n    },\n    {\n      \"entity_id\": \"sensor.hallway_temperature\",\n      \"state\": \"20C\",\n      \"last_updated\": \"10: 30AM\"\n    },\n    {\n      \"entity_id\": \"light.ensuite_light\",\n      \"state\": \"off\"\n    },\n    {\n      \"entity_id\": \"light.bedroom_lights\",\n      \"state\": \"off\"\n    },\n    {\n      \"entity_id\": \"light.closet_light\",\n      \"state\": \"off\"\n    },\n       ]\n}"
      },
      "json/theme": {
        "index": 94,
        "type": "TEXT",
        "title": "theme",
        "description": "Theme database",
        "value": "{\"OneUI\":{\"border_width\":2,\"corner_radius\":2,\"pad_widget\":16,\"pad_obj\":10,\"pad_sides\":16,\"ring_shape\":\"SQUIRCLE\",\"ring_percent\":25,\"ring_random\":1,\"dev_ico_ring\":0,\"wgt_opacity\":150,\"shadow\":0,\"colors\":{\"light\":{\"back_1\":\"syscn1,90\",\"back_2\":\"syscn2,90\",\"obj_icon_off\":\"sysca2,30\",\"obj_ring_off\":\"random\",\"obj_icon_on\":\"sysca1,100\",\"obj_ring_on\":\"\",\"border\":\"#EBEBEB\"},\"dark\":{\"back_1\":\"syscn1,22\",\"back_2\":\"syscn2,22\",\"obj_icon_off\":\"sysca2,90\",\"obj_ring_off\":\"sysca2,30\",\"obj_icon_on\":\"sysca1,20\",\"obj_ring_on\":\"sysca1,80\",\"border\":\"#EBEBEB\"},\"randomring\":{\"0\":\"#9bbe04\",\"1\":\"#15b76d\",\"2\":\"#0c967c\",\"3\":\"#18dc7f\",\"4\":\"#11b1f3\",\"5\":\"#091ea\",\"6\":\"#1e4bc6\",\"7\":\"#6693ed\",\"8\":\"#7882ff\",\"9\":\"#8064f4\",\"10\":\"#6445e5\",\"11\":\"#ee2172\",\"12\":\"#f01446\",\"13\":\"#d60052\",\"14\":\"#e53d35\",\"15\":\"#e95b31\",\"16\":\"#ff9e00\",\"17\":\"#ff7b22\",\"18\":\"#ff9e00\"}}},\"Material\":{\"border_width\":0,\"corner_radius\":2,\"pad_widget\":10,\"pad_obj\":10,\"pad_sides\":16,\"ring_shape\":\"CIRCLE\",\"ring_percent\":25,\"ring_random\":0,\"dev_ico_ring\":1,\"wgt_opacity\":50,\"shadow\":1,\"colors\":{\"light\":{\"back_1\":\"syscn1,90\",\"back_2\":\"syscn2,90\",\"obj_icon_off\":\"sysca2,30\",\"obj_ring_off\":\"sysca2,90\",\"obj_icon_on\":\"sysca1,100\",\"obj_ring_on\":\"sysca1,40\",\"border\":\"\"},\"dark\":{\"back_1\":\"syscn1,22\",\"back_2\":\"syscn2,22\",\"obj_icon_off\":\"sysca2,90\",\"obj_ring_off\":\"sysca2,30\",\"obj_icon_on\":\"sysca1,20\",\"obj_ring_on\":\"sysca1,80\",\"border\":\"\"}}},\"Basic\":{\"border_width\":0,\"corner_radius\":10,\"pad_widget\":6,\"pad_obj\":10,\"pad_sides\":12,\"ring_shape\":\"CIRCLE\",\"ring_percent\":0,\"ring_random\":1,\"dev_ico_ring\":0,\"wgt_opacity\":75,\"colors\":{\"light\":{\"back_1\":\"wpcolor1\",\"back_2\":\"wpcolor2\",\"obj_icon_off\":\"#E7FFFFFF\",\"obj_ring_off\":\"#FF000000\",\"obj_icon_on\":\"wpcolor1\",\"obj_ring_on\":\"#FFFFFF\",\"border\":\"\"},\"dark\":{\"back_1\":\"wpcolor1\",\"back_2\":\"wpcolor2\",\"obj_icon_off\":\"#FFFFFF\",\"obj_ring_off\":\"#FF000000\",\"obj_icon_on\":\"wpcolor1\",\"obj_ring_on\":\"#FFFFFF\",\"border\":\"\"}}}}"
      },
      "json/template": {
        "index": 95,
        "type": "TEXT",
        "title": "template",
        "description": "Template database",
        "value": "{  \"light\": {\n    \"objects\": {\n      \"bedroom\": {\n        \"icon\": \"mdi-room-king-bed\",\n        \"type\": \"page\",\n        \"onstate\": \"page1\",\n        \"action\": \"page\",\n        \"cmd\": \"\",\n        \"data\": \"1\"\n      },\n      \"office\": {\n        \"icon\": \"mdi-room-desk\",\n        \"type\": \"page\",\n        \"onstate\": \"page2\",\n        \"action\": \"page\",\n        \"cmd\": \"\",\n        \"data\": \"2\"\n      },\n      \"livingroom\": {\n        \"icon\": \"mdi-room-sofa-single-outline\",\n        \"type\": \"page\",\n        \"onstate\": \"page3\",\n        \"action\": \"page\",\n        \"cmd\": \"\",\n        \"data\": \"3\"\n      },\n      \"foyer\": {\n        \"icon\": \"mdi-room-coat-rack\",\n        \"type\": \"page\",\n        \"onstate\": \"page4\",\n        \"action\": \"page\",\n        \"cmd\": \"\",\n        \"data\": \"4\"\n      },\n      \"power\": {\n        \"icon\": \"mdi-power\",\n        \"type\": \"action\",\n        \"onstate\": \"\",\n        \"action\": \"toggle\",\n        \"cmd\": \"\",\n        \"data\": \"\"\n      },\n      \"controlapp\": {\n        \"icon\": \"mdi-room-king-bed\",\n        \"type\": \"action\",\n        \"onstate\": \"\",\n        \"action\": \"\",\n        \"cmd\": \"\",\n        \"data\": \"\"\n      },\n      \"color\": {\n        \"icon\": \"mdi-palette\",\n        \"type\": \"action\",\n        \"onstate\": \"\",\n        \"action\": \"color\",\n        \"cmd\": \"color\",\n        \"data\": \"#FFFFFF\"\n      },\n      \"off\": {\n        \"icon\": \"mdi-lightbulb-off-outline\",\n        \"type\": \"action\",\n        \"onstate\": \"off\",\n        \"action\": \"off\",\n        \"cmd\": \"\",\n        \"data\": \"\"\n      },\n      \"low\": {\n        \"icon\": \"mdi-lightbulb-on-30\",\n        \"type\": \"action\",\n        \"onstate\": \"1>75\",\n        \"action\": \"light\",\n        \"cmd\": \"brightness\",\n        \"data\": \"74\"\n      },\n      \"med\": {\n        \"icon\": \"mdi-lightbulb-on-60\",\n        \"type\": \"action\",\n        \"onstate\": \"76>200\",\n        \"action\": \"light\",\n        \"cmd\": \"brightness\",\n        \"data\": \"150\"\n      },\n      \"high\": {\n        \"icon\": \"mdi-lightbulb-on\",\n        \"type\": \"action\",\n        \"onstate\": \"200>255\",\n        \"action\": \"light\",\n        \"cmd\": \"brightness\",\n        \"data\": \"255\"\n      },\n      \"on\": {\n        \"icon\": \"mdi-lightbulb-on\",\n        \"type\": \"action\",\n        \"onstate\": \"on\",\n        \"action\": \"light\",\n        \"cmd\": \"brightness\",\n        \"data\": \"255\"\n      }\n    },\n    \"light1\": {\n      \"name\": \"Light - 2-4 Page/Device, 2 Row\",\n      \"note\": \"Testing Template V3\",\n      \"icon\": \"material-ico-wb-incandescent-mod\",\n      \"page\": 1,\n      \"box1_size\": 2,\n      \"row_count\": 2,\n      \"device_icon_pos\": 1,\n      \"device_count\": \"2-4\",\n      \"page1\": {\n        \"box1\": {\n          \"row1\": {\n            \"0\": \"bedroom\",\n            \"1\": \"office\"\n          },\n          \"row2\": {\n            \"0\": \"livingroom\",\n            \"1\": \"foyer\"\n          }\n        },\n        \"box2\": {\n          \"row1\": {\n            \"0\": \"power\",\n            \"1\": \"controlapp\",\n            \"2\": \"color\"\n          },\n          \"row2\": {\n            \"0\": \"off\",\n            \"1\": \"low\",\n            \"2\": \"med\",\n            \"3\": \"high\"\n          }\n        }\n      },\n      \"page2\": {\n        \"box1\": {\n          \"row1\": {\n            \"0\": \"bedroom\",\n            \"1\": \"office\"\n          },\n          \"row2\": {\n            \"0\": \"livingroom\",\n            \"1\": \"foyer\"\n          }\n        },\n        \"box2\": {\n          \"row1\": {\n            \"0\": \"power\",\n            \"1\": \"controlapp\",\n            \"2\": \"color\"\n          },\n          \"row2\": {\n            \"0\": \"off\",\n            \"1\": \"low\",\n            \"2\": \"med\",\n            \"3\": \"high\"\n          }\n        }\n      },\n      \"page3\": {\n        \"box1\": {\n          \"row1\": {\n            \"0\": \"bedroom\",\n            \"1\": \"office\"\n          },\n          \"row2\": {\n            \"0\": \"livingroom\",\n            \"1\": \"foyer\"\n          }\n        },\n        \"box2\": {\n          \"row1\": {\n            \"0\": \"power\",\n            \"1\": \"controlapp\",\n            \"2\": \"color\"\n          },\n          \"row2\": {\n            \"0\": \"off\",\n            \"1\": \"low\",\n            \"2\": \"med\",\n            \"3\": \"high\"\n          }\n        }\n      },\n      \"page4\": {\n        \"box1\": {\n          \"row1\": {\n            \"0\": \"bedroom\",\n            \"1\": \"office\"\n          },\n          \"row2\": {\n            \"0\": \"livingroom\",\n            \"1\": \"foyer\"\n          }\n        },\n        \"box2\": {\n          \"row1\": {\n            \"0\": \"power\",\n            \"1\": \"controlapp\",\n            \"2\": \"color\"\n          },\n          \"row2\": {\n            \"0\": \"off\",\n            \"1\": \"low\",\n            \"2\": \"med\",\n            \"3\": \"high\"\n          }\n        }\n      }\n    },\n    \"light2\": {\n      \"name\": \"Light - 0 Page, 1 Device, 2 Row\",\n      \"note\": \"Testing Template V3\",\n      \"icon\": \"material-ico-wb-incandescent-mod\",\n      \"page\": 0,\n      \"box1_size\": 2,\n      \"row_count\": 2,\n      \"device_icon_pos\": 2,\n      \"device_count\": 1,\n      \"box2\": {\n          \"row1\": {\n            \"0\": \"power\",\n            \"1\": \"controlapp\",\n            \"2\": \"color\"\n          },\n          \"row2\": {\n            \"0\": \"off\",\n            \"1\": \"low\",\n            \"2\": \"med\",\n            \"3\": \"high\"\n          }\n      }\n    },\n    \"light3\": {\n      \"name\": \"Light - 0 page, 1 Device, 1 Row\",\n      \"note\": \"Testing Template V3\",\n      \"icon\": \"material-ico-wb-incandescent-mod\",\n      \"page\": 0,\n      \"box1_size\": 2,\n      \"row_count\": 1,\n      \"device_icon_pos\": 1,\n      \"device_count\": 1,\n      \"box1\": {\n          \"row1\": {\n            \"0\": \"controlapp\"\n          }\n      },\n      \"box2\": {\n          \"row1\": {\n            \"0\": \"off\",\n            \"1\": \"low\",\n            \"2\": \"med\",\n            \"3\": \"high\"\n          }\n      }\n   }\n  }\n} "
      },
      "json/status": {
        "index": 96,
        "type": "TEXT",
        "title": "status",
        "description": "Status and error database",
        "value": "{\"status\": {\"01\": {\"error_name\": \"error1\",\"error_content\": \"Error 1\"},\"02\": {\"error_name\": \"error1\",\"error_content\": \"Error 1\"},\"03\": {\"error_name\": \"error1\",\"error_content\": \"Error 1\"},\"04\": {\"error_name\": \"error1\",\"error_content\": \"Error 1\"},\"05\": {\"error_name\": \"error1\",\"error_content\": \"Error 1\"},\"06\": {\"error_name\": \"error1\",\"error_content\": \"Error 1\"},\"07\": {\"error_name\": \"error1\",\"error_content\": \"Error 1\"}}}"
      },
      "setupmode": {
        "index": 97,
        "type": "SWITCH",
        "title": "setupmode",
        "description": "Debugging - Enable showing setup data",
        "value": 0
      }
    },
    "internal_flows": [
      {
        "id": "FYLSQy37",
        "name": "Obj - Activate",
        "t": [
          {
            "id": "TTkijwxj",
            "type": "T_MANUAL"
          }
        ],
        "a": [
          {
            "id": "TAZDuMgg",
            "type": "A_FORMULA",
            "params": {
              "formula": "$lv(posid,#last)$$gv(func/jsonobj)$$lv(uri,(if(#obtype=\"template\",(\"tasker://secondary?service_call=\"+#obaction+\"&parameters=\"+#obparam),#obtype=\"action\",(\"tasker://secondary?service_call=\"+#obaction+\"&entity_id=\"+#entity+\"&parameters=\"+#obparam),#obtype=\"page\",\"page\",\"\")))$$if(#uri=\"\"|#uri=\"page\",#obdata,#uri)$"
            }
          },
          {
            "id": "TA2ERzP2",
            "type": "A_GLOBAL",
            "params": {
              "global": "core/tasker/temp"
            }
          }
        ]
      },
      {
        "id": "FFgHBJxG",
        "name": "Tasker > KWGT",
        "t": [
          {
            "id": "TTw6dJEr",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(core/tasker/fromtasker)$"
            }
          }
        ],
        "a": [
          {
            "id": "TAGxT3jY",
            "type": "A_FORMULA",
            "params": {
              "formula": "$lv(entity, tc(json, gv(core/tasker/fromtasker), \".entity_id\"))$$lv(exists, if(tc(json, gv(json/device), \"$.device_states[?(@.entity_id == '\" + #entity + \"')].entity_id\") != \"\", 1, 0))$$lv(datawipe, tc(reg, tc(reg, gv(json/device), \"\\n\", \"\"), \"\\s\", \"\"))$$lv(jsonwipe, tc(reg, tc(reg, gv(core/tasker/fromtasker), \"\\n\", \"\"), \"\\s\", \"\"))$$lv(jsonrem, (if(#exists = 1, gv(func/devjsonrem), #datawipe)))$$lv(jsonout, tc(reg, #jsonrem, \"\\},\\]\\}\", (\"\\},\" + #jsonwipe + \"\\]\\}\")))$$lv(jsonline, gv(func/devjsonadd))$$lv(jarrcut, tc(split, tc(split, #jsonline, \"[\", 1), \"]\", 0))$$lv(jarredit, tc(reg,#jarrcut, \"\\n\", tc(utf, 0A) + \"    \"))$$lv(jaddspc, gv(func/devjsonindent))$$lv(jremblnk, tc(reg, #jaddspc, \"\\s\\n\", \"\"))$$#jremblnk$"
            }
          },
          {
            "id": "TANiPsuc",
            "type": "A_GLOBAL",
            "params": {
              "global": "json/device"
            }
          }
        ]
      },
      {
        "id": "F0hyOinD",
        "name": "Tasker > Status",
        "t": [
          {
            "id": "TTmTkIwY",
            "type": "T_MANUAL"
          },
          {
            "id": "TTbJKHUh",
            "type": "T_FORMULA",
            "params": {
              "formula": "$br(tasker, error)$"
            }
          }
        ],
        "a": [
          {
            "id": "TALqxwOL",
            "type": "A_FORMULA",
            "params": {
              "formula": "$br(tasker, error)$"
            }
          },
          {
            "id": "TAP8oZd5",
            "type": "A_GLOBAL",
            "params": {
              "global": "status"
            }
          },
          {
            "id": "TAEVrQ7k",
            "type": "A_FORMULA",
            "params": {
              "formula": "1"
            }
          },
          {
            "id": "TAYv78pd",
            "type": "A_GLOBAL",
            "params": {
              "global": "statustimer"
            }
          }
        ]
      },
      {
        "id": "FNOjayCO",
        "name": "Align - Box 1 Position",
        "t": [
          {
            "id": "TTGZqmKT",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(theme/advanced/boxtoggle)$$si(rratio)$"
            }
          }
        ],
        "a": [
          {
            "id": "TAKkmw2V",
            "type": "A_FORMULA",
            "params": {
              "formula": "$lv(align, gv(theme/advanced/widgetorient))$$lv(invert, gv(theme/advanced/boxtoggle))$$lv(pos, (if(#align = 0 & #invert = 0, \"RIGHT\",#align = 0 & #invert = 1, \"LEFT\",#align = 1 & #invert = 0, \"TOP\",#align = 1 & #invert = 1, \"BOTTOM\")))$$if(gv(theme/advanced/autoalign) = 1, #pos, gv(theme/advanced/box1pos))$"
            }
          },
          {
            "id": "TAkUFwMK",
            "type": "A_GLOBAL",
            "params": {
              "global": "theme/advanced/box1pos"
            }
          }
        ]
      },
      {
        "id": "FgxzaLpQ",
        "name": "Align - Box 1 Size",
        "t": [
          {
            "id": "TT0gENXP",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(theme/advanced/widgetorient)$$gv(devicetype)$$gv(templateselect)$$gv(theme/advanced/box1sq)$"
            }
          },
          {
            "id": "TTbtNHVj",
            "type": "T_ONCE"
          }
        ],
        "a": [
          {
            "id": "TAcZGnOY",
            "type": "A_STOP_IF",
            "params": {
              "formula": "$gv(theme/advanced/autoalign)$"
            }
          },
          {
            "id": "TAdp5TwR",
            "type": "A_FORMULA",
            "params": {
              "formula": "$gv(func/jsontemp)$$gv(func/alignment)$$lv(box1col1,(tc(json, #dbtemp,(if(#tpageon = 0, (#template + \".box1.row1.1\"),(#template + \".page\" + #curpage + \".box1.row1.1\"))))))$$lv(box1col2,(tc(json, #dbtemp,(if(#tpageon = 0, (#template + \".box1.row1.1\"),(#template + \".page\" + #curpage + \".box1.row2.1\"))))))$$lv(box1col, if(#box1col1 = \"\" & #box1col2 = \"\", 0, 1))$$lv(size, (if(gv(theme/advanced/box1sq) = 1, #wgtdir,(if(#tbox1 = 0, 0,#tbox1 = 1, #box1sm,#tbox1 = 2 & #box1col = 0, #box1sm,#tbox1 = 2 & #box1col = 1, #box1lg,#ticopos = 2 & #tbox1 = 2, #wgtdir,#ticopos = 2 & #tbox1 = 1, #box1sm,#wgtdir)))))$$#size$"
            }
          },
          {
            "id": "TALDjuUt",
            "type": "A_GLOBAL",
            "params": {
              "global": "theme/advanced/box1size"
            }
          }
        ]
      },
      {
        "id": "FsbjtzyQ",
        "name": "Color Generate",
        "t": [
          {
            "id": "TTUkmYaQ",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(colors/colorgen/syscolorset)$$gv(colors/colorgen/adjtone)$$gv(colors/colorgen/opacity)$"
            }
          },
          {
            "id": "TTzikhLH",
            "type": "T_ONCE"
          }
        ],
        "a": [
          {
            "id": "TAR39UAy",
            "type": "A_FORMULA",
            "params": {
              "formula": "$gv(func/themecolors)$$lv(adjcolor,gv(colors/colorgen/adjtone))$$lv(opacity,gv(colors/colorgen/opacity))$$lv(gsyscolorset,gv(colors/colorgen/syscolorset))$$lv(syscolorset,(if(#gsyscolorset=1,\"sysca1\",#gsyscolorset=2,\"sysca2\",#gsyscolorset=3,\"sysca3\",#gsyscolorset=4,\"syscn1\",#gsyscolorset=5,\"syscn2\",#gsyscolorset=6,\"syscn3\",\"\")))$$lv(matfilter,si(#syscolorset,#adjcolor))$$lv(matfinal,ce(#matfilter,alpha,#opacity))$$#matfinal$"
            }
          },
          {
            "id": "TA0aKoeW",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/colorgen/output"
            }
          }
        ]
      },
      {
        "id": "FblPILjW",
        "name": "Color Editor",
        "t": [
          {
            "id": "TTUkmYaQ",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(colors/coloredit/editcolor)$$gv(colors/coloredit/filter)$$gv(colors/coloredit/adjfilter)$$gv(colors/coloredit/opacity)$"
            }
          },
          {
            "id": "TTBjHeGW",
            "type": "T_ONCE"
          }
        ],
        "a": [
          {
            "id": "TAR39UAy",
            "type": "A_FORMULA",
            "params": {
              "formula": "$gv(func/themecolors)$$lv(adjfilter,gv(colors/coloredit/adjfilter))$$lv(opacity,gv(colors/coloredit/opacity))$$lv(gfilter,gv(colors/coloredit/filter))$$lv(editcolor,gv(colors/coloredit/editcolor))$$lv(filter,(if(#gfilter=1,\"sat\",#gfilter=2,\"lum\",#gfilter=3,\"comp\",\"\")))$$lv(getcolor,(tc(json,#dbtheme,(\".\"+#colors+#editcolor))))$$lv(editfilter,if(#editcolor~=\"wpcolor\\d\",ce(si(#editcolor),#filter,#adjfilter),ce(#getcolor,#filter,#adjfilter),))$$lv(editfinal,ce(#editfilter,alpha,#opacity))$$#editfinal$"
            }
          },
          {
            "id": "TAJkiJSQ",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/coloredit/output"
            }
          }
        ]
      },
      {
        "id": "Fq2VUNYN",
        "name": "Debugging - Write Template Name",
        "t": [
          {
            "id": "TTb1TEiQ",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(devicetype)$$gv(templateselect)$"
            }
          }
        ],
        "a": [
          {
            "id": "TATIb7P6",
            "type": "A_FORMULA",
            "params": {
              "formula": "$gv(func/jsontemp)$$#tname$"
            }
          },
          {
            "id": "TAkTybPu",
            "type": "A_GLOBAL",
            "params": {
              "global": "templatename"
            }
          }
        ]
      },
      {
        "id": "FrD0Z5y4",
        "name": "Template info write",
        "t": [
          {
            "id": "TTwknfpt",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(templateselect)$"
            }
          }
        ],
        "a": [
          {
            "id": "TA7X3wSB",
            "type": "A_FORMULA",
            "params": {
              "formula": "$lv(posid,(\".box2.row1.\"+(#box2maxobj-1)))$$gv(func/alignment)$$lv(box1vis,if(#tbox1=1,\",1Box\",#tbox1=2,\",2Boxes\",0))$$lv(ntdevnum,(if(#tdevct~=\"\\d-\\d\",(\"Connect\"+#tdevct+\"\"+gv(devicetype)+\"entitiesforthistemplate\"),#tdevct=4,(\"Connectupto4\"+gv(devicetype)+\"entitiesforthistemplate,1perpage\"),(\"Connect\"+#tdevct+\"\"+gv(devicetype)+\"entitiesforthistemplate\"))))$$lv(ntwgtsize,(if(#objkey!=#obj,\"Thistemplaterequires\"+\"?\"+\"iconstofitinBox2,butonly\"+\"#box2maxobj\"+\"canfit.\\\\nResizethewidget,see\\\"fitmoreobj\\\"settingbeloworconsultReadme\",\"\")))$$gv(devicetype)+\"-\"+#tdevct+\"Device(s),\"+#trowct+\"Row(s)\"+#box1vis$$#ntdevnum$$#ntwgtsize$"
            }
          },
          {
            "id": "TAQdzAhP",
            "type": "A_GLOBAL",
            "params": {
              "global": "templateinfo"
            }
          }
        ]
      },
      {
        "id": "F4NQE1cc",
        "name": "Obj - KWGT > Tasker",
        "t": [
          {
            "id": "TTFlKZRj",
            "type": "T_MANUAL"
          },
          {
            "id": "TTuZQfrZ",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(core/tasker/temp)$",
              "trigger": "NOT_EMPTY"
            }
          }
        ],
        "a": [
          {
            "id": "TAbN51Tx",
            "type": "A_INTENT_URI",
            "params": {
              "uri": "$lv(uri, gv(core/tasker/temp))$$if(#uri ~= \"\\b\\d\\b\", \"\", #uri)$"
            }
          },
          {
            "id": "TAPJ9OzQ",
            "type": "A_FORMULA",
            "params": {
              "formula": "0"
            }
          },
          {
            "id": "TAmpB5ow",
            "type": "A_GLOBAL",
            "params": {
              "global": "core/tasker/temp"
            }
          }
        ]
      },
      {
        "id": "FyyE9xL4",
        "name": "Obj - Page Change",
        "t": [
          {
            "id": "TTvxrRaE",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(core/tasker/temp)$"
            }
          }
        ],
        "a": [
          {
            "id": "TA3scV0x",
            "type": "A_FORMULA",
            "params": {
              "formula": "$lv(uri, gv(core/tasker/temp))$$lv(page, gv(core/curpage))$$if(#uri ~= \"\\b\\d\\b\", #uri, #page)$"
            }
          },
          {
            "id": "TAmLKvF4",
            "type": "A_GLOBAL",
            "params": {
              "global": "core/curpage"
            }
          }
        ]
      },
      {
        "id": "FnUXUxSr",
        "name": "Clear custom color values",
        "t": [
          {
            "id": "TTphjlji",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(colors/reset)$"
            }
          }
        ],
        "a": [
          {
            "id": "TA2pas31",
            "type": "A_FORMULA",
            "params": {
              "formula": "$gv(_)$"
            }
          },
          {
            "id": "TA5u5frQ",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/back1"
            }
          },
          {
            "id": "TAEVzXP1",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/back2"
            }
          },
          {
            "id": "TAMOLS73",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/objiconon"
            }
          },
          {
            "id": "TAIfgmXr",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/objiconoff"
            }
          },
          {
            "id": "TAFQ35LE",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/objringon"
            }
          },
          {
            "id": "TAfQvtdU",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/objringoff"
            }
          },
          {
            "id": "TAtakAeI",
            "type": "A_GLOBAL",
            "params": {
              "global": "colors/border"
            }
          }
        ]
      },
      {
        "id": "FLEl6LBU",
        "name": "External Launcher",
        "t": [
          {
            "id": "TTUobnYB",
            "type": "T_MANUAL"
          }
        ],
        "a": [
          {
            "id": "TAQ6fnTG",
            "type": "A_FORMULA",
            "params": {
              "formula": "$lv(ext, gv(\"external/\" + #trigger))$$gv(func/jsonmain)$$lv(app,if(#ext = 1, (\"ha.entity.\" + #entity),#ext = 2, \"ha\",#ext = 3, \"ha.assist\",#ext = 4, \"kwgt\",#ext = 5, gv(external/custom),\"\"))$$lv(action, if(#ext = 5, \"custom\", \"open\"))$$\"tasker://secondary?action=\" + #action + \"&app=\" + #app$"
            }
          },
          {
            "id": "TAFTNmZo",
            "type": "A_INTENT_URI",
            "params": {
              "uri": "$#last$"
            }
          }
        ]
      },
      {
        "id": "FXd9JKxE",
        "name": "Status bar",
        "t": [
          {
            "id": "TT9nchCA",
            "type": "T_FORMULA",
            "params": {
              "formula": "$gv(core/status/setstatus)$",
              "trigger": "NOT_EMPTY"
            }
          }
        ],
        "a": [
          {
            "id": "TAwVXxGZ",
            "type": "A_FORMULA",
            "params": {
              "formula": "$gv(func/status)$$tc(json, #dbstatus, (\".\" + #cat1 + \".\" + #error1 + \".error\"))$"
            }
          },
          {
            "id": "TAqUS6rV",
            "type": "A_GLOBAL",
            "params": {
              "global": "core/status/currentstatus"
            }
          },
          {
            "id": "TAj1Cwa8",
            "type": "A_GLOBAL",
            "params": {
              "global": "core/status/statustimer"
            }
          }
        ]
      }
    ],
    "viewgroup_items": [
      {
        "internal_type": "OverlapLayerModule",
        "internal_title": "Background Data",
        "internal_toggles": {
          "config_alpha": 10,
          "config_visible": 10
        },
        "internal_formulas": {
          "config_alpha": "$gv(func/theme)$$#wgtopa$",
          "config_visible": "$gv(func/theme)$$if(#shadow = 0, REMOVE, ALWAYS)$"
        },
        "viewgroup_items": [
          {
            "internal_type": "ShapeModule",
            "internal_title": "Shadow1",
            "internal_toggles": {
              "shape_width": 10,
              "shape_height": 10,
              "shape_corners": 10
            },
            "internal_formulas": {
              "shape_width": "$gv(func/alignment)$$if(#align = 1, #wgtheight, #wgtwidth)$",
              "shape_height": "$gv(func/alignment)$$if(#align = 0, #wgtheight, #wgtwidth)$",
              "shape_corners": "$gv(func/theme)$$#radius$"
            },
            "paint_color": "#00FFFFFF",
            "fx_shadow": "OUTER",
            "fx_shadow_distance": 4.0,
            "fx_shadow_direction": 180.0,
            "shape_type": "RECT",
            "paint_mode": "OVERLAY"
          },
          {
            "internal_type": "ShapeModule",
            "internal_title": "Shadow2",
            "internal_toggles": {
              "shape_width": 10,
              "shape_height": 10,
              "shape_corners": 10
            },
            "internal_formulas": {
              "shape_width": "$gv(func/alignment)$$if(#align = 1, #wgtheight, #wgtwidth)$",
              "shape_height": "$gv(func/alignment)$$if(#align = 0, #wgtheight, #wgtwidth)$",
              "shape_corners": "$gv(func/theme)$$#radius$"
            },
            "paint_color": "#00FFFFFF",
            "fx_shadow": "OUTER",
            "fx_shadow_distance": 4.0,
            "fx_shadow_direction": 0,
            "shape_type": "RECT",
            "paint_mode": "OVERLAY"
          }
        ]
      },
      {
        "internal_type": "OverlapLayerModule",
        "internal_title": "Box 1",
        "internal_toggles": {
          "position_anchor": 10,
          "position_offset_x": 10,
          "position_offset_y": 10,
          "config_visible": 10
        },
        "internal_formulas": {
          "position_anchor": "$gv(func/alignment)$$#box1anchor$",
          "position_offset_x": "$gv(func/alignment)$$if(#align = 0, #padwgthor, 0 )$",
          "position_offset_y": "$gv(func/alignment)$$if(#align = 0, 0, #padwgtver)$",
          "config_visible": "$gv(func/jsontemp)$$if(#tbox1 = 0, REMOVE, ALWAYS)$"
        },
        "viewgroup_items": [
          {
            "internal_type": "OverlapLayerModule",
            "internal_title": "Background",
            "internal_toggles": {
              "config_alpha": 10
            },
            "internal_formulas": {
              "config_alpha": "$gv(func/theme)$$#wgtopa$"
            },
            "viewgroup_items": [
              {
                "internal_type": "ShapeModule",
                "internal_title": "Background Color",
                "internal_toggles": {
                  "paint_color": 10,
                  "shape_width": 10,
                  "shape_height": 10,
                  "shape_corners": 10
                },
                "internal_formulas": {
                  "shape_width": "$gv(func/alignment)$$if(#align = 1, #wgtwidth, gv(theme/advanced/box1size))$",
                  "shape_height": "$gv(func/alignment)$$if(#align = 0, #wgtheight, gv(theme/advanced/box1size))$",
                  "shape_corners": "$gv(func/theme)$$#radius$",
                  "paint_color": "$gv(func/themecolors)$$#back1$"
                },
                "shape_type": "RECT",
                "paint_mode": "OVERLAY"
              }
            ]
          },
          {
            "internal_type": "OverlapLayerModule",
            "internal_title": "Background",
            "internal_toggles": {
              "config_visible": 10
            },
            "internal_formulas": {
              "config_visible": "$gv(func/theme)$$if(#border != 0, ALWAYS, REMOVE)$"
            },
            "viewgroup_items": [
              {
                "internal_type": "ShapeModule",
                "internal_title": "Background",
                "internal_toggles": {
                  "paint_color": 10,
                  "shape_width": 10,
                  "shape_height": 10,
                  "shape_corners": 10,
                  "paint_stroke": 10
                },
                "internal_formulas": {
                  "paint_color": "$gv(func/themecolors)$$#border$",
                  "shape_width": "$gv(func/alignment)$$if(#align = 1, #wgtwidth, gv(theme/advanced/box1size))$",
                  "shape_height": "$gv(func/alignment)$$if(#align = 0, #wgtheight, gv(theme/advanced/box1size))$",
                  "shape_corners": "$gv(func/theme)$$#radius$",
                  "paint_stroke": "$gv(func/theme)$$#border$"
                },
                "shape_type": "RECT",
                "paint_style": "STROKE"
              }
            ]
          },
          {
            "internal_type": "StackLayerModule",
            "internal_title": "Objects",
            "internal_toggles": {
              "config_visible": 10,
              "position_padding_left": 10,
              "position_padding_right": 10,
              "position_padding_top": 10,
              "position_padding_bottom": 10,
              "config_stacking": 10,
              "config_margin": 10
            },
            "internal_formulas": {
              "config_visible": "$gv(func/jsonobj)$$if(#ticonpos = \"2\", REMOVE, ALWAYS)$",
              "position_padding_left": "$gv(func/theme)$$gv(func/jsontemp)$$if(#tbox1 = 1, (if(gv(theme/advanced/box1pos) = LEFT, #padwgthor, 0)), 0)$",
              "position_padding_right": "$gv(func/theme)$$gv(func/jsontemp)$$if(#tbox1 = 1, (if(gv(theme/advanced/box1pos) = RIGHT, #padwgthor, 0)), 0)$",
              "position_padding_top": "$gv(func/theme)$$gv(func/jsontemp)$$if(#tbox1 = 1, (if(gv(theme/advanced/box1pos) = TOP, #padwgthor, 0)), 0)$",
              "position_padding_bottom": "$gv(func/theme)$$gv(func/jsontemp)$$if(#tbox1 = 1, (if(gv(theme/advanced/box1pos) = BOTTOM, #padwgthor, 0)), 0)$",
              "config_stacking": "$if(gv(theme/advanced/widgetorient) = 0, VERTICAL_CENTER, HORIZONTAL_CENTER)$",
              "config_margin": "$gv(func/alignment)$$#pad1$"
            },
            "config_stacking": "HORIZONTAL_CENTER",
            "viewgroup_items": [
              {
                "internal_type": "StackLayerModule",
                "internal_title": "Row 1",
                "internal_toggles": {
                  "config_stacking": 10,
                  "config_margin": 10
                },
                "internal_formulas": {
                  "config_stacking": "$if(gv(theme/advanced/widgetorient) = 0, HORIZONTAL_CENTER, VERTICAL_CENTER)$",
                  "config_margin": "$gv(func/alignment)$$#pad2$"
                },
                "viewgroup_items": [
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 0",
                    "internal_toggles": {
                      "config_visible": 10,
                      "position_padding_left": 10,
                      "position_padding_top": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box1.row1.0\")$$gv(func/jsonobj)$$if(#obid = \"0\", REMOVE, ALWAYS)$",
                      "position_padding_left": "$lv(posid, \".box1.row2.1\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" & #align = 0, \"10\", \"0\")$",
                      "position_padding_top": "$lv(posid, \".box1.row2.1\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" & #align = 1, \"10\", \"0\")$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box1.row1.0"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box1.row1.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box1.row1.0\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box1.row1.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 1",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box1.row1.1\")$$gv(func/jsonobj)$$lv(entity, \"entities/entity\" + #obdata)$$if(#obid = \"0\", REMOVE,#obid = \"1\" & #obtype = \"page\" & gv(#entity) = \"\", REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box1.row1.1"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box1.row1.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box1.row1.1\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box1.row1.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "internal_type": "StackLayerModule",
                "config_stacking": "HORIZONTAL_CENTER",
                "internal_title": "Row 2",
                "internal_toggles": {
                  "config_stacking": 10,
                  "config_visible": 10,
                  "config_margin": 10
                },
                "internal_formulas": {
                  "config_stacking": "$if(gv(theme/advanced/widgetorient) = 0, HORIZONTAL_CENTER, VERTICAL_CENTER )$",
                  "config_visible": "$gv(func/jsontemp)$$if(#trowct != \"2\", REMOVE, ALWAYS)$",
                  "config_margin": "$gv(func/alignment)$$#pad2$"
                },
                "viewgroup_items": [
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 0",
                    "internal_toggles": {
                      "config_visible": 10,
                      "position_padding_left": 10,
                      "position_padding_top": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box1.row2.0\")$$gv(func/jsonobj)$$lv(entity, \"entities/entity\" + #obdata)$$if(#obid = \"0\", REMOVE,#obid = \"1\" & #obtype = \"page\" & gv(#entity) = \"\", REMOVE, ALWAYS)$",
                      "position_padding_left": "$lv(posid, \".box1.row2.1\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" & #align = 0, \"10\", \"0\")$",
                      "position_padding_top": "$lv(posid, \".box1.row2.1\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" & #align = 1, \"10\", \"0\")$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box1.row2.0"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box1.row2.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box1.row2.0\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box1.row2.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 1",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box1.row2.1\")$$gv(func/jsonobj)$$lv(entity, \"entities/entity\" + #obdata)$$if(#obid = \"0\", REMOVE,#obid = \"1\" & #obtype = \"page\" & gv(#entity) = \"\", REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box1.row2.1"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box1.row2.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box1.row2.1\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box1.row2.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$ "
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "internal_type": "OverlapLayerModule",
            "internal_title": "Climate State",
            "config_visible": "REMOVE",
            "viewgroup_items": [
              {
                "internal_type": "ProgressModule",
                "progress_progress": "CUSTOM",
                "progress_max": 80.0,
                "progress_level": 20.0,
                "progress_count": 80.0,
                "progress_rotate_mode": "FLIP_X",
                "progress_rotate_offset": 180.0,
                "color_fgcolor": "#FF3654FF",
                "color_bgcolor": "#FFFFFFFF",
                "style_style": "CIRCLE",
                "style_size": 160.0,
                "style_height": 7.0
              },
              {
                "internal_type": "ProgressModule",
                "progress_progress": "CUSTOM",
                "progress_max": 80.0,
                "progress_level": 20.0,
                "progress_count": 80.0,
                "progress_rotate_mode": "DEG180",
                "color_fgcolor": "#FFC40000",
                "color_bgcolor": "#00FFFFFF",
                "style_style": "CIRCLE",
                "style_size": 160.0,
                "style_height": 7.0
              },
              {
                "internal_type": "TextModule",
                "internal_title": "Nest-style Dial",
                "text_expression": "$wi(temp)$°$wi(tempu)$",
                "text_size": 40.0
              }
            ]
          },
          {
            "internal_type": "OverlapLayerModule",
            "internal_title": "Security Status",
            "config_visible": "REMOVE",
            "viewgroup_items": [
              {
                "internal_type": "FontIconModule",
                "icon_icon": "mdi-dev-shield-home",
                "icon_set": "kfile://org.kustom.provider/widgets/Device_Control_Widget_0475_Alpha_first_test_.kwgt/icons/hawgts2.ttf",
                "internal_events": [
                  {
                    "type": "SINGLE_TAP",
                    "action": "SWITCH_GLOBAL",
                    "switch": "tasker/cmd",
                    "switch_text": "on&security.arm_system"
                  }
                ],
                "internal_toggles": {
                  "icon_size": 100
                },
                "internal_globals": {
                  "icon_size": "theme/objsize"
                },
                "internal_title": "Security Status",
                "paint_color": "#FF44FF01"
              },
              {
                "internal_type": "FontIconModule",
                "icon_icon": "mdi-shield-home-outline",
                "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                "internal_toggles": {
                  "icon_size": 0
                },
                "internal_globals": {
                  "icon_size": "theme/objsize"
                },
                "internal_title": "Security Status",
                "paint_color": "#FF1AFF1F",
                "icon_size": 140.0
              }
            ]
          }
        ]
      },
      {
        "internal_type": "OverlapLayerModule",
        "internal_title": "Box 2",
        "internal_toggles": {
          "position_anchor": 10,
          "position_offset_y": 10,
          "position_offset_x": 10
        },
        "internal_formulas": {
          "position_anchor": "$gv(func/alignment)$$#box1anchor$",
          "position_offset_y": "$gv(func/theme)$$if(gv(theme/advanced/widgetorient) = 0, 0, (gv(theme/advanced/box1size) + #padwgtver))$",
          "position_offset_x": "$gv(func/theme)$$if(gv(theme/advanced/widgetorient) = 0, (gv(theme/advanced/box1size) + #padwgthor), 0)$"
        },
        "viewgroup_items": [
          {
            "internal_type": "OverlapLayerModule",
            "internal_title": "Background",
            "internal_toggles": {
              "config_alpha": 10
            },
            "internal_formulas": {
              "config_alpha": "$gv(func/theme)$$#wgtopa$"
            },
            "viewgroup_items": [
              {
                "internal_type": "ShapeModule",
                "internal_title": "Background Color",
                "shape_type": "RECT",
                "internal_toggles": {
                  "paint_color": 10,
                  "shape_width": 10,
                  "shape_height": 10,
                  "shape_corners": 10
                },
                "internal_formulas": {
                  "paint_color": "$gv(func/themecolors)$$#back2$",
                  "shape_height": "$gv(func/alignment)$$#box2height$",
                  "shape_width": "$gv(func/alignment)$$#box2width$",
                  "shape_corners": "$gv(func/theme)$$#radius$"
                }
              }
            ]
          },
          {
            "internal_type": "OverlapLayerModule",
            "internal_title": "Background",
            "internal_toggles": {
              "config_visible": 10
            },
            "internal_formulas": {
              "config_visible": "$gv(func/theme)$$if(#border != 0, ALWAYS, REMOVE)$"
            },
            "viewgroup_items": [
              {
                "internal_type": "ShapeModule",
                "internal_title": "Background Border",
                "shape_type": "RECT",
                "paint_style": "STROKE",
                "internal_toggles": {
                  "paint_color": 10,
                  "shape_corners": 10,
                  "shape_width": 10,
                  "shape_height": 10,
                  "paint_stroke": 10
                },
                "internal_formulas": {
                  "paint_color": "$gv(func/themecolors)$$#border$",
                  "shape_corners": "$gv(func/theme)$$#radius$",
                  "shape_height": "$gv(func/alignment)$$#box2height$",
                  "shape_width": "$gv(func/alignment)$$#box2width$",
                  "paint_stroke": "$gv(func/theme)$$#border$"
                }
              }
            ]
          },
          {
            "internal_type": "StackLayerModule",
            "internal_title": "Objects",
            "internal_toggles": {
              "position_anchor": 10,
              "position_padding_left": 10,
              "position_padding_right": 10,
              "position_padding_top": 10,
              "position_padding_bottom": 10,
              "config_stacking": 10,
              "config_margin": 10
            },
            "internal_formulas": {
              "position_anchor": "$gv(func/alignment)$$#box1anchor$",
              "position_padding_left": "$gv(func/theme)$$if(gv(theme/advanced/box1pos) = LEFT, #padobjside, 0)$",
              "position_padding_right": "$gv(func/theme)$$if(gv(theme/advanced/box1pos) = RIGHT, #padobjside, 0)$",
              "position_padding_top": "$gv(func/theme)$$if(gv(theme/advanced/box1pos) = TOP, #padobjside, 0)$",
              "position_padding_bottom": "$gv(func/theme)$$if(gv(theme/advanced/box1pos) = BOTTOM, #padobjside, 0)$",
              "config_stacking": "$gv(func/alignment)$$#box1center$",
              "config_margin": "$gv(func/alignment)$$#pad1$"
            },
            "config_stacking": "VERTICAL_CENTER",
            "viewgroup_items": [
              {
                "internal_type": "StackLayerModule",
                "config_stacking": "HORIZONTAL_CENTER",
                "internal_title": "Row 1",
                "internal_toggles": {
                  "config_stacking": 10,
                  "config_margin": 10
                },
                "internal_formulas": {
                  "config_stacking": "$if(gv(theme/advanced/widgetorient) = 0, HORIZONTAL_CENTER, VERTICAL_CENTER )$",
                  "config_margin": "$gv(func/alignment)$$#pad2$"
                },
                "viewgroup_items": [
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 0",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row1.0\")$$gv(func/jsonobj)$$if(#obid = \"0\", REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row1.0"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row1.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row1.0\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row1.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 1",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row1.1\")$$gv(func/jsonobj)$$if(#obid = \"0\", REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row1.1"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row1.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row1.1\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row1.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 2",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row1.2\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 3, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row1.2"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\"(.box2.row1.2\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 0 & #settheme = \"OneUI\", #ringcolor,#stoutput = 1 & #settheme != \"OneUI)\")$$gv(func/jsonstate)$$gv(func/themecolors)$$lv(colorcount,tc(reg,fl(0,40,\"i+1\",gv(core/randomring),\",\"),\"[\\d+,]*,(\\d+),*\",\".box2.row1.2\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 0 & #settheme = \"OneUI\", #ringcolor,#stoutput = 1 & #settheme != \"OneUI\"))$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$if(#objringoff=\"random\",#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row1.2\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row1.2\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 3",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row1.3\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 4, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row1.3"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row1.3\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row1.3\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row1.3\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 4",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row1.4\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 5, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row1.4"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row1.4\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row1.4\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row1.4\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 5",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row1.5\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 6, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row1.5"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row1.3\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row1.5\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row1.5\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  }
                ]
              },
              {
                "internal_type": "StackLayerModule",
                "config_stacking": "HORIZONTAL_CENTER",
                "internal_title": "Row 2",
                "internal_toggles": {
                  "config_stacking": 10,
                  "config_margin": 10,
                  "config_visible": 10
                },
                "internal_formulas": {
                  "config_stacking": "$if(gv(theme/advanced/widgetorient) = 0, HORIZONTAL_CENTER, VERTICAL_CENTER )$",
                  "config_visible": "$gv(func/jsontemp)$$if(#trowct != \"2\", REMOVE, ALWAYS)$",
                  "config_margin": "$gv(func/alignment)$$#pad2$"
                },
                "viewgroup_items": [
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 0",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row2.0\")$$gv(func/jsonobj)$$if(#obid = \"0\", REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row2.0"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row2.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row2.0\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row2.0\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 1",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row2.1\")$$gv(func/jsonobj)$$if(#obid = \"0\", REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row2.1"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row2.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row2.1\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row2.1\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 2",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row2.2\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 3, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row2.2"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row2.2\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row2.2\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row2.2\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 3",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row2.3\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 4, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row2.3"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row2.3\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      },
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row2.3\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row2.3\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 4",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row2.4\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 5, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row2.4"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row2.4\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row2.4\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      },
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row2.4\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      }
                    ]
                  },
                  {
                    "internal_type": "OverlapLayerModule",
                    "internal_title": "Object 5",
                    "internal_toggles": {
                      "config_visible": 10
                    },
                    "internal_formulas": {
                      "config_visible": "$lv(posid, \".box2.row2.5\")$$gv(func/jsonobj)$$gv(func/alignment)$$if(#obid = \"0\" | #box2maxobj < 6, REMOVE, ALWAYS)$"
                    },
                    "internal_events": [
                      {
                        "type": "SINGLE_TAP",
                        "action": "TRIGGER_FLOW",
                        "flow_id": "FYLSQy37",
                        "switch_text": ".box2.row2.5"
                      }
                    ],
                    "viewgroup_items": [
                      {
                        "internal_type": "FontIconModule",
                        "internal_title": "Icon",
                        "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                        "internal_toggles": {
                          "icon_icon": 10,
                          "icon_size": 10,
                          "paint_color": 10
                        },
                        "internal_formulas": {
                          "icon_size": "$gv(func/alignment)$$#objiconsize$",
                          "icon_icon": "$lv(posid, \".box2.row2.5\")$$gv(func/jsonobj)$$#obicon$",
                          "paint_color": "$lv(posid, \".box2.row2.5\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#stoutput = 1, #objiconon, #objiconoff)$"
                        }
                      },
                      {
                        "internal_type": "ShapeModule",
                        "internal_title": "Ring",
                        "internal_toggles": {
                          "paint_color": 10,
                          "shape_width": 100,
                          "shape_type": 10,
                          "shape_corners": 10
                        },
                        "internal_globals": {
                          "shape_width": "theme/objsize"
                        },
                        "internal_formulas": {
                          "shape_corners": "$gv(func/theme)$$#squircle$",
                          "paint_color": "$lv(posid,\".box2.row2.5\")$$gv(func/jsonstate)$$gv(func/themecolors)$$if(#ringcolor=\"\",lv(ringcolor,ce(tc(json,#dbtheme,(\".randomring.\"+mu(rnd,0,#colorcount))),sat,20)))$$if(#objringoff=\"random\"&#ringrnd=1&#colorcheck!=0,#ringcolor,if(#stoutput=1,#objringon,#objringoff))$",
                          "shape_type": "$gv(func/theme)$$#ringsha$"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "internal_type": "StackLayerModule",
            "internal_title": "Status Bar",
            "internal_toggles": {
              "config_visible": 10
            },
            "internal_formulas": {
              "config_visible": "$if(gv(core/status/statustimer) = 1, ALWAYS, REMOVE)$"
            },
            "config_stacking": "HORIZONTAL_CENTER",
            "position_anchor": "BOTTOMLEFT",
            "viewgroup_items": [
              {
                "internal_type": "FontIconModule",
                "icon_set": "kfile://org.kustom.provider/widgets/Device_Control_Widget_0505_Alpha.kwgt/icons/hawgts2.ttf",
                "icon_icon": "mdi-bell",
                "icon_size": 20.0,
                "paint_color": "#FFFF2020"
              },
              {
                "internal_type": "TextModule",
                "position_padding_left": 5.0,
                "internal_toggles": {
                  "text_expression": 100
                },
                "internal_globals": {
                  "text_expression": "core/status/currentstatus"
                }
              }
            ]
          }
        ]
      },
      {
        "internal_type": "OverlapLayerModule",
        "internal_title": "Device Icon",
        "internal_toggles": {
          "position_anchor": 10,
          "position_offset_x": 10,
          "position_offset_y": 10,
          "config_visible": 10
        },
        "internal_formulas": {
          "position_anchor": "$gv(func/alignment)$$#devicopos$",
          "config_visible": "$gv(func/jsontemp)$$if(#ticopos = 3, REMOVE, ALWAYS)$",
          "position_offset_x": "$gv(func/alignment)$$lv(pos, if(#devicoalign = 1, #devposcalc, 0))$$if(#ticopos = 1 | #ticopos = 3, #pad3, #ticopos = 2, #pos)$",
          "position_offset_y": "$gv(func/alignment)$$lv(pos, if(#poscalc = 0, #poscalc, 0))$$if(#ticopos = 1 | #ticopos = 3, #pad3, #ticopos = 2, #pos)$"
        },
        "viewgroup_items": [
          {
            "internal_type": "FontIconModule",
            "internal_title": "Device Icon",
            "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
            "icon_icon": "material-ico-wb-incandescent-mod",
            "internal_toggles": {
              "paint_color": 10,
              "position_offset_y": 10,
              "position_offset_x": 10,
              "icon_rotate_mode": 10,
              "icon_size": 100,
              "icon_icon": 10
            },
            "internal_formulas": {
              "paint_color": "$gv(func/themecolors)$$lv(posid, \".box1.row1.0\")$$gv(func/jsonstate)$$if(gv(devicetype) = \"light\" & #stcolor != \"\", #stcolor, #objiconoff)$$#stcolor$",
              "icon_rotate_mode": "$if(gv(theme/deviceiconrotation) = DATA, NONE, gv(theme/deviceiconrotation))$",
              "position_offset_y": "$gv(func/theme)$$##padwgthor$",
              "position_offset_x": "$gv(func/theme)$$##padwgtver$",
              "icon_icon": "$gv(func/jsontemp)$$#ticon$"
            },
            "internal_globals": {
              "icon_size": "theme/deviceiconsize"
            }
          },
          {
            "internal_type": "OverlapLayerModule",
            "internal_title": "Touch Overlay",
            "internal_toggles": {
              "config_visible": 10
            },
            "internal_formulas": {
              "config_visible": "$if(gv(external/devicon) != 0, ALWAYS, REMOVE)$"
            },
            "viewgroup_items": [
              {
                "internal_type": "ShapeModule",
                "internal_toggles": {
                  "shape_width": 100
                },
                "internal_globals": {
                  "shape_width": "theme/deviceiconsize"
                },
                "internal_events": [
                  {
                    "type": "SINGLE_TAP",
                    "action": "TRIGGER_FLOW",
                    "flow_id": "FLEl6LBU",
                    "switch_text": "devicon"
                  }
                ],
                "paint_color": "#00FFFFFF",
                "shape_type": "SQUIRCLE"
              }
            ]
          }
        ]
      },
      {
        "internal_type": "StackLayerModule",
        "internal_title": "App Icons",
        "position_offset_x": 10.0,
        "position_offset_y": 10.0,
        "config_stacking": "HORIZONTAL_CENTER",
        "internal_toggles": {
          "config_margin": 10,
          "position_anchor": 10,
          "position_offset_x": 10,
          "position_offset_y": 10
        },
        "internal_formulas": {
          "position_anchor": "$gv(func/alignment)$$#appicopos$",
          "config_margin": "$gv(func/theme)$$#padobjver$",
          "position_offset_x": "$gv(func/alignment)$$lv(pos, if(#devicoalign = 1, #devposcalc, 0))$$(if(#ticopos = 1 | #ticopos = 3, #pad3, #ticopos = 2, #pos)) + #padobjside$",
          "position_offset_y": "$gv(func/alignment)$$lv(pos, if(#poscalc = 0, #poscalc, 0))$$(if(#ticopos = 1 | #ticopos = 3, #pad3, #ticopos = 2, #pos)) + #padobjside$"
        },
        "viewgroup_items": [
          {
            "internal_type": "StackLayerModule",
            "internal_title": "App 1",
            "config_stacking": "HORIZONTAL_CENTER",
            "internal_toggles": {
              "config_visible": 10
            },
            "internal_formulas": {
              "config_visible": "$if(gv(external/appicon1) != 0, ALWAYS, REMOVE)$"
            },
            "viewgroup_items": [
              {
                "internal_type": "FontIconModule",
                "internal_title": "App 1",
                "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                "internal_events": [
                  {
                    "type": "SINGLE_TAP",
                    "action": "TRIGGER_FLOW",
                    "flow_id": "FLEl6LBU",
                    "switch_text": "appicon1"
                  }
                ],
                "internal_toggles": {
                  "paint_color": 10,
                  "position_anchor": 10,
                  "position_offset_x": 10,
                  "icon_size": 100,
                  "icon_icon": 10,
                  "position_offset_y": 10
                },
                "internal_formulas": {
                  "paint_color": "$gv(func/themecolors)$$#objiconoff$",
                  "icon_icon": "$gv(func/jsontemp)$$lv(ext,gv(external/appicon1))$$if(#ext=1,#ticon,#ext=2,\"app-home-assistant\",#ext=3,\"app-home-assistant-assist\",#ext=4,\"mdi-cog\", #ext=5,#ticon,\"\")$",
                  "position_anchor": "$if(gv(theme/advanced/box1pos) = RIGHT, BOTTOMLEFT, gv(theme/advanced/box1pos) = LEFT, BOTTOMRIGHT,  gv(theme/advanced/box1pos) = TOP, BOTTOMRIGHT,  gv(theme/advanced/box1pos) = BOTTOM, TOPRIGHT)$",
                  "position_offset_x": "$gv(func/theme)$$#padwgtver +(#padobjhor * 2) + gv(external/appiconsize)$",
                  "position_offset_y": "$gv(func/theme)$$#padwgthor + #padobjhor$"
                },
                "internal_globals": {
                  "icon_size": "external/appiconsize"
                }
              }
            ]
          },
          {
            "internal_type": "StackLayerModule",
            "internal_title": "App 2",
            "config_stacking": "HORIZONTAL_CENTER",
            "internal_toggles": {
              "config_visible": 10
            },
            "internal_formulas": {
              "config_visible": "$if(gv(external/appicon2) != 0, ALWAYS, REMOVE)$"
            },
            "viewgroup_items": [
              {
                "internal_type": "FontIconModule",
                "internal_title": "App 2",
                "icon_set": "kfile://org.kustom.provider/icons/hawgts2.ttf",
                "internal_events": [
                  {
                    "type": "SINGLE_TAP",
                    "action": "TRIGGER_FLOW",
                    "flow_id": "FLEl6LBU",
                    "switch_text": "appicon2"
                  }
                ],
                "internal_toggles": {
                  "paint_color": 10,
                  "position_anchor": 10,
                  "position_offset_x": 10,
                  "icon_size": 100,
                  "icon_icon": 10,
                  "position_offset_y": 10
                },
                "internal_formulas": {
                  "paint_color": "$gv(func/themecolors)$$#objiconoff$",
                  "icon_icon": "$gv(func/jsontemp)$$lv(ext, gv(external/appicon2))$$if(#ext = 1, #ticon,#ext = 2, \"app-home-assistant\",#ext = 3, \"app-home-assistant-assist\",#ext = 4, \"mdi-cog\",#ext = 5, #ticon,\"\")$",
                  "position_anchor": "$if(gv(theme/advanced/box1pos) = RIGHT, BOTTOMLEFT, gv(theme/advanced/box1pos) = LEFT, BOTTOMRIGHT,  gv(theme/advanced/box1pos) = TOP, BOTTOMRIGHT,  gv(theme/advanced/box1pos) = BOTTOM, TOPRIGHT)$",
                  "position_offset_x": "$gv(func/theme)$$#padwgtver + #padobjhor$",
                  "position_offset_y": "$gv(func/theme)$$#padwgthor + #padobjhor$"
                },
                "internal_globals": {
                  "icon_size": "external/appiconsize"
                }
              }
            ]
          }
        ]
      },
      {
        "internal_type": "ShapeModule",
        "internal_title": "Backup Settings Button",
        "internal_toggles": {
          "position_anchor": 10
        },
        "internal_formulas": {
          "position_anchor": "$if(gv(theme/advanced/box1pos) = RIGHT, TOPLEFT, gv(theme/advanced/box1pos) = LEFT, TOPRIGHT,  gv(theme/advanced/box1pos) = TOP, BOTTOMLEFT,  gv(theme/advanced/box1pos) = BOTTOM, TOPLEFT)$"
        },
        "shape_width": 30.0,
        "paint_color": "#00FFFFFF",
        "position_anchor": "TOPRIGHT",
        "internal_events": [
          {
            "type": "SINGLE_TAP",
            "action": "KUSTOM_ACTION",
            "kustom_action": "ADVANCED_EDITOR"
          }
        ]
      }
    ]
  }
}
